//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAO_Hermes
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BDHermesBancarizacionEntities : DbContext
    {
        public BDHermesBancarizacionEntities()
            : base("name=BDHermesBancarizacionEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AfiliacionSeguro> AfiliacionSeguro { get; set; }
        public virtual DbSet<AfiliacionSeguroAlumno> AfiliacionSeguroAlumno { get; set; }
        public virtual DbSet<AfiliacionSeguroPadre> AfiliacionSeguroPadre { get; set; }
        public virtual DbSet<Grado> Grado { get; set; }
        public virtual DbSet<Padre> Padre { get; set; }
        public virtual DbSet<TipoPadre> TipoPadre { get; set; }
        public virtual DbSet<C__RefactorLog> C__RefactorLog { get; set; }
        public virtual DbSet<Menu> Menu { get; set; }
        public virtual DbSet<Parametros> Parametros { get; set; }
        public virtual DbSet<Permisos> Permisos { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Banco> Banco { get; set; }
        public virtual DbSet<BancoParametro> BancoParametro { get; set; }
        public virtual DbSet<BancoParametroTipo> BancoParametroTipo { get; set; }
        public virtual DbSet<CaracterEspecial> CaracterEspecial { get; set; }
        public virtual DbSet<CaracterEspecialTipo> CaracterEspecialTipo { get; set; }
        public virtual DbSet<CargaTxtParametro> CargaTxtParametro { get; set; }
        public virtual DbSet<CIASeguro> CIASeguro { get; set; }
        public virtual DbSet<CIASeguroProducto> CIASeguroProducto { get; set; }
        public virtual DbSet<ConfiguracionArchivo> ConfiguracionArchivo { get; set; }
        public virtual DbSet<ConfiguracionArchivoDetalle> ConfiguracionArchivoDetalle { get; set; }
        public virtual DbSet<ConfiguracionArchivoTipo> ConfiguracionArchivoTipo { get; set; }
        public virtual DbSet<Contacto> Contacto { get; set; }
        public virtual DbSet<Cuenta> Cuenta { get; set; }
        public virtual DbSet<InstitucionEducativa> InstitucionEducativa { get; set; }
        public virtual DbSet<Moneda> Moneda { get; set; }
        public virtual DbSet<Producto> Producto { get; set; }
        public virtual DbSet<TipoDocumento> TipoDocumento { get; set; }
        public virtual DbSet<TipoInstitucionEducativa> TipoInstitucionEducativa { get; set; }
        public virtual DbSet<Asociacion> Asociacion { get; set; }
        public virtual DbSet<AsociacionDetalle> AsociacionDetalle { get; set; }
        public virtual DbSet<Campania> Campania { get; set; }
        public virtual DbSet<CampaniaDetalle> CampaniaDetalle { get; set; }
        public virtual DbSet<CargaHistorial> CargaHistorial { get; set; }
        public virtual DbSet<Cheque> Cheque { get; set; }
        public virtual DbSet<Codigo> Codigo { get; set; }
        public virtual DbSet<CodigoDetalle> CodigoDetalle { get; set; }
        public virtual DbSet<CodigoDetallePago> CodigoDetallePago { get; set; }
        public virtual DbSet<Mail> Mail { get; set; }
        public virtual DbSet<MailAdjunto> MailAdjunto { get; set; }
        public virtual DbSet<Trama> Trama { get; set; }
        public virtual DbSet<Roles> Roles { get; set; }
        public virtual DbSet<UserClaims> UserClaims { get; set; }
        public virtual DbSet<UserLogins> UserLogins { get; set; }
        public virtual DbSet<UserRoles> UserRoles { get; set; }
        public virtual DbSet<Users> Users { get; set; }
        public virtual DbSet<Ubigeo> Ubigeo { get; set; }
        public virtual DbSet<PersonaDatosAdic> PersonaDatosAdic { get; set; }
        public virtual DbSet<Reg_Online> Reg_Online { get; set; }
        public virtual DbSet<Alumno> Alumno { get; set; }
        public virtual DbSet<PersonaPreg> PersonaPreg { get; set; }
    
        public virtual ObjectResult<Nullable<int>> Usp_Sel_AlumnoEnCampania(string numeroDocumento, Nullable<int> productoID, Nullable<int> campaniaID)
        {
            var numeroDocumentoParameter = numeroDocumento != null ?
                new ObjectParameter("NumeroDocumento", numeroDocumento) :
                new ObjectParameter("NumeroDocumento", typeof(string));
    
            var productoIDParameter = productoID.HasValue ?
                new ObjectParameter("ProductoID", productoID) :
                new ObjectParameter("ProductoID", typeof(int));
    
            var campaniaIDParameter = campaniaID.HasValue ?
                new ObjectParameter("CampaniaID", campaniaID) :
                new ObjectParameter("CampaniaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Usp_Sel_AlumnoEnCampania", numeroDocumentoParameter, productoIDParameter, campaniaIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Usp_Sel_PadreEnCampania(string numeroDocumento, Nullable<int> productoID, Nullable<int> campaniaID)
        {
            var numeroDocumentoParameter = numeroDocumento != null ?
                new ObjectParameter("NumeroDocumento", numeroDocumento) :
                new ObjectParameter("NumeroDocumento", typeof(string));
    
            var productoIDParameter = productoID.HasValue ?
                new ObjectParameter("ProductoID", productoID) :
                new ObjectParameter("ProductoID", typeof(int));
    
            var campaniaIDParameter = campaniaID.HasValue ?
                new ObjectParameter("CampaniaID", campaniaID) :
                new ObjectParameter("CampaniaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Usp_Sel_PadreEnCampania", numeroDocumentoParameter, productoIDParameter, campaniaIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> BUSCARALUMNO_SEGURO(Nullable<int> tipoDocumentoID, string numeroDocumento)
        {
            var tipoDocumentoIDParameter = tipoDocumentoID.HasValue ?
                new ObjectParameter("TipoDocumentoID", tipoDocumentoID) :
                new ObjectParameter("TipoDocumentoID", typeof(int));
    
            var numeroDocumentoParameter = numeroDocumento != null ?
                new ObjectParameter("NumeroDocumento", numeroDocumento) :
                new ObjectParameter("NumeroDocumento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("BUSCARALUMNO_SEGURO", tipoDocumentoIDParameter, numeroDocumentoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> BUSCARPADRE_SEGURO(Nullable<int> tipoDocumentoID, string numeroDocumento, string tipoDocAlumno, string numDocAlumno, Nullable<int> aSOCIACIONID)
        {
            var tipoDocumentoIDParameter = tipoDocumentoID.HasValue ?
                new ObjectParameter("TipoDocumentoID", tipoDocumentoID) :
                new ObjectParameter("TipoDocumentoID", typeof(int));
    
            var numeroDocumentoParameter = numeroDocumento != null ?
                new ObjectParameter("NumeroDocumento", numeroDocumento) :
                new ObjectParameter("NumeroDocumento", typeof(string));
    
            var tipoDocAlumnoParameter = tipoDocAlumno != null ?
                new ObjectParameter("TipoDocAlumno", tipoDocAlumno) :
                new ObjectParameter("TipoDocAlumno", typeof(string));
    
            var numDocAlumnoParameter = numDocAlumno != null ?
                new ObjectParameter("NumDocAlumno", numDocAlumno) :
                new ObjectParameter("NumDocAlumno", typeof(string));
    
            var aSOCIACIONIDParameter = aSOCIACIONID.HasValue ?
                new ObjectParameter("ASOCIACIONID", aSOCIACIONID) :
                new ObjectParameter("ASOCIACIONID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("BUSCARPADRE_SEGURO", tipoDocumentoIDParameter, numeroDocumentoParameter, tipoDocAlumnoParameter, numDocAlumnoParameter, aSOCIACIONIDParameter);
        }
    
        public virtual int LIMPIARASOCIACIONESCAMPAÑA(Nullable<int> cOMPANIAID)
        {
            var cOMPANIAIDParameter = cOMPANIAID.HasValue ?
                new ObjectParameter("COMPANIAID", cOMPANIAID) :
                new ObjectParameter("COMPANIAID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LIMPIARASOCIACIONESCAMPAÑA", cOMPANIAIDParameter);
        }
    
        public virtual ObjectResult<LoguearUsuario_Result> LoguearUsuario(string userName, string password)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoguearUsuario_Result>("LoguearUsuario", userNameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<OBTENER_INST_ASOCIADASxCompañia_Result> OBTENER_INST_ASOCIADASxCompañia(Nullable<int> iDCAMPAÑA)
        {
            var iDCAMPAÑAParameter = iDCAMPAÑA.HasValue ?
                new ObjectParameter("IDCAMPAÑA", iDCAMPAÑA) :
                new ObjectParameter("IDCAMPAÑA", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OBTENER_INST_ASOCIADASxCompañia_Result>("OBTENER_INST_ASOCIADASxCompañia", iDCAMPAÑAParameter);
        }
    
        public virtual ObjectResult<string> ObtenerBancosAsociacion(Nullable<int> asociacionId)
        {
            var asociacionIdParameter = asociacionId.HasValue ?
                new ObjectParameter("AsociacionId", asociacionId) :
                new ObjectParameter("AsociacionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ObtenerBancosAsociacion", asociacionIdParameter);
        }
    
        public virtual ObjectResult<ObtenerConfiguracionArchivo_Result> ObtenerConfiguracionArchivo(Nullable<int> tipo)
        {
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerConfiguracionArchivo_Result>("ObtenerConfiguracionArchivo", tipoParameter);
        }
    
        public virtual ObjectResult<OBTENERINSTITUCIONESASOCIADAS_Result> OBTENERINSTITUCIONESASOCIADAS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OBTENERINSTITUCIONESASOCIADAS_Result>("OBTENERINSTITUCIONESASOCIADAS");
        }
    
        public virtual ObjectResult<Nullable<decimal>> OBTENERPRIMA_ASOCIACION(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("OBTENERPRIMA_ASOCIACION", iDParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int USP_AfiliacionSeguroAlumnoInsert(Nullable<int> iD, Nullable<int> afiliacionSeguroID, Nullable<int> alumnoID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var afiliacionSeguroIDParameter = afiliacionSeguroID.HasValue ?
                new ObjectParameter("AfiliacionSeguroID", afiliacionSeguroID) :
                new ObjectParameter("AfiliacionSeguroID", typeof(int));
    
            var alumnoIDParameter = alumnoID.HasValue ?
                new ObjectParameter("AlumnoID", alumnoID) :
                new ObjectParameter("AlumnoID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_AfiliacionSeguroAlumnoInsert", iDParameter, afiliacionSeguroIDParameter, alumnoIDParameter);
        }
    
        public virtual int USP_AfiliacionSeguroInsert(Nullable<int> iD, Nullable<int> institucionEducativaID, string codigoPago, Nullable<bool> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioActualizacion, Nullable<System.DateTime> fechaActualizacion)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var institucionEducativaIDParameter = institucionEducativaID.HasValue ?
                new ObjectParameter("InstitucionEducativaID", institucionEducativaID) :
                new ObjectParameter("InstitucionEducativaID", typeof(int));
    
            var codigoPagoParameter = codigoPago != null ?
                new ObjectParameter("CodigoPago", codigoPago) :
                new ObjectParameter("CodigoPago", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioActualizacionParameter = usuarioActualizacion != null ?
                new ObjectParameter("UsuarioActualizacion", usuarioActualizacion) :
                new ObjectParameter("UsuarioActualizacion", typeof(string));
    
            var fechaActualizacionParameter = fechaActualizacion.HasValue ?
                new ObjectParameter("FechaActualizacion", fechaActualizacion) :
                new ObjectParameter("FechaActualizacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_AfiliacionSeguroInsert", iDParameter, institucionEducativaIDParameter, codigoPagoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioActualizacionParameter, fechaActualizacionParameter);
        }
    
        public virtual int USP_AfiliacionSeguroPadreInsert(Nullable<int> iD, Nullable<int> afiliacionSeguroID, Nullable<int> padreID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var afiliacionSeguroIDParameter = afiliacionSeguroID.HasValue ?
                new ObjectParameter("AfiliacionSeguroID", afiliacionSeguroID) :
                new ObjectParameter("AfiliacionSeguroID", typeof(int));
    
            var padreIDParameter = padreID.HasValue ?
                new ObjectParameter("PadreID", padreID) :
                new ObjectParameter("PadreID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_AfiliacionSeguroPadreInsert", iDParameter, afiliacionSeguroIDParameter, padreIDParameter);
        }
    
        public virtual int USP_AlumnoInsert(Nullable<int> iD, string apellidoPaternno, string apellidoMaterno, string nombre, Nullable<int> tipoDocumentoID, string numeroDocumento, Nullable<System.DateTime> fechaNacimiento, string codigoAlumno, string carrera, Nullable<int> sexo, Nullable<int> gradoID, string seccion, Nullable<int> beneficiarioID, Nullable<bool> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioActualizacion, Nullable<System.DateTime> fechaActualizacion)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var apellidoPaternnoParameter = apellidoPaternno != null ?
                new ObjectParameter("ApellidoPaternno", apellidoPaternno) :
                new ObjectParameter("ApellidoPaternno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var tipoDocumentoIDParameter = tipoDocumentoID.HasValue ?
                new ObjectParameter("TipoDocumentoID", tipoDocumentoID) :
                new ObjectParameter("TipoDocumentoID", typeof(int));
    
            var numeroDocumentoParameter = numeroDocumento != null ?
                new ObjectParameter("NumeroDocumento", numeroDocumento) :
                new ObjectParameter("NumeroDocumento", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var codigoAlumnoParameter = codigoAlumno != null ?
                new ObjectParameter("CodigoAlumno", codigoAlumno) :
                new ObjectParameter("CodigoAlumno", typeof(string));
    
            var carreraParameter = carrera != null ?
                new ObjectParameter("Carrera", carrera) :
                new ObjectParameter("Carrera", typeof(string));
    
            var sexoParameter = sexo.HasValue ?
                new ObjectParameter("Sexo", sexo) :
                new ObjectParameter("Sexo", typeof(int));
    
            var gradoIDParameter = gradoID.HasValue ?
                new ObjectParameter("GradoID", gradoID) :
                new ObjectParameter("GradoID", typeof(int));
    
            var seccionParameter = seccion != null ?
                new ObjectParameter("Seccion", seccion) :
                new ObjectParameter("Seccion", typeof(string));
    
            var beneficiarioIDParameter = beneficiarioID.HasValue ?
                new ObjectParameter("BeneficiarioID", beneficiarioID) :
                new ObjectParameter("BeneficiarioID", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioActualizacionParameter = usuarioActualizacion != null ?
                new ObjectParameter("UsuarioActualizacion", usuarioActualizacion) :
                new ObjectParameter("UsuarioActualizacion", typeof(string));
    
            var fechaActualizacionParameter = fechaActualizacion.HasValue ?
                new ObjectParameter("FechaActualizacion", fechaActualizacion) :
                new ObjectParameter("FechaActualizacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_AlumnoInsert", iDParameter, apellidoPaternnoParameter, apellidoMaternoParameter, nombreParameter, tipoDocumentoIDParameter, numeroDocumentoParameter, fechaNacimientoParameter, codigoAlumnoParameter, carreraParameter, sexoParameter, gradoIDParameter, seccionParameter, beneficiarioIDParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioActualizacionParameter, fechaActualizacionParameter);
        }
    
        public virtual int USP_ANULAR_COD_SEGURO(string cODIGO, Nullable<bool> eSTADO, Nullable<int> iD)
        {
            var cODIGOParameter = cODIGO != null ?
                new ObjectParameter("CODIGO", cODIGO) :
                new ObjectParameter("CODIGO", typeof(string));
    
            var eSTADOParameter = eSTADO.HasValue ?
                new ObjectParameter("ESTADO", eSTADO) :
                new ObjectParameter("ESTADO", typeof(bool));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_ANULAR_COD_SEGURO", cODIGOParameter, eSTADOParameter, iDParameter);
        }
    
        public virtual int USP_ASIGNAPOLIZA(Nullable<int> iD, string nROPOLIZA, string codigoContratante, string nombreContratante)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nROPOLIZAParameter = nROPOLIZA != null ?
                new ObjectParameter("NROPOLIZA", nROPOLIZA) :
                new ObjectParameter("NROPOLIZA", typeof(string));
    
            var codigoContratanteParameter = codigoContratante != null ?
                new ObjectParameter("CodigoContratante", codigoContratante) :
                new ObjectParameter("CodigoContratante", typeof(string));
    
            var nombreContratanteParameter = nombreContratante != null ?
                new ObjectParameter("NombreContratante", nombreContratante) :
                new ObjectParameter("NombreContratante", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_ASIGNAPOLIZA", iDParameter, nROPOLIZAParameter, codigoContratanteParameter, nombreContratanteParameter);
        }
    
        public virtual int USP_ASOCIACIAR_CAMPAÑA(Nullable<int> cOMPANIAID, Nullable<int> iDASOCIACION, Nullable<bool> eSTADO, string uSERNAME, Nullable<bool> aCTIVO)
        {
            var cOMPANIAIDParameter = cOMPANIAID.HasValue ?
                new ObjectParameter("COMPANIAID", cOMPANIAID) :
                new ObjectParameter("COMPANIAID", typeof(int));
    
            var iDASOCIACIONParameter = iDASOCIACION.HasValue ?
                new ObjectParameter("IDASOCIACION", iDASOCIACION) :
                new ObjectParameter("IDASOCIACION", typeof(int));
    
            var eSTADOParameter = eSTADO.HasValue ?
                new ObjectParameter("ESTADO", eSTADO) :
                new ObjectParameter("ESTADO", typeof(bool));
    
            var uSERNAMEParameter = uSERNAME != null ?
                new ObjectParameter("USERNAME", uSERNAME) :
                new ObjectParameter("USERNAME", typeof(string));
    
            var aCTIVOParameter = aCTIVO.HasValue ?
                new ObjectParameter("ACTIVO", aCTIVO) :
                new ObjectParameter("ACTIVO", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_ASOCIACIAR_CAMPAÑA", cOMPANIAIDParameter, iDASOCIACIONParameter, eSTADOParameter, uSERNAMEParameter, aCTIVOParameter);
        }
    
        public virtual int USP_AsociacionDetalleInsert(Nullable<int> iD, Nullable<int> asociacionID, Nullable<int> cuentaID, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioActualizacion, Nullable<System.DateTime> fechaActualizacion)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var asociacionIDParameter = asociacionID.HasValue ?
                new ObjectParameter("AsociacionID", asociacionID) :
                new ObjectParameter("AsociacionID", typeof(int));
    
            var cuentaIDParameter = cuentaID.HasValue ?
                new ObjectParameter("CuentaID", cuentaID) :
                new ObjectParameter("CuentaID", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioActualizacionParameter = usuarioActualizacion != null ?
                new ObjectParameter("UsuarioActualizacion", usuarioActualizacion) :
                new ObjectParameter("UsuarioActualizacion", typeof(string));
    
            var fechaActualizacionParameter = fechaActualizacion.HasValue ?
                new ObjectParameter("FechaActualizacion", fechaActualizacion) :
                new ObjectParameter("FechaActualizacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_AsociacionDetalleInsert", iDParameter, asociacionIDParameter, cuentaIDParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioActualizacionParameter, fechaActualizacionParameter);
        }
    
        public virtual int USP_AsociacionInsert(Nullable<int> iD, Nullable<int> institucionEducativaID, Nullable<int> cIASeguroID, Nullable<int> recaudadorID, Nullable<int> monedaID, Nullable<int> productoID, Nullable<bool> tipoPrima, byte[] filePlanSeguro, Nullable<decimal> prima, string nroPoliza, string codigoContratante, string nombreContratante, Nullable<System.DateTime> fechaVigenciaInicio, Nullable<System.DateTime> fechaVigenciaFin, Nullable<System.DateTime> fechaVigenciaPolizaInicio, Nullable<System.DateTime> fechaVigenciaPolizaFin, Nullable<decimal> gastoCuracion, Nullable<decimal> invalidezPermanenteTotal, Nullable<decimal> invalidezPermanenteParcial, Nullable<decimal> muerteAccidental, Nullable<decimal> gastosSepelio, Nullable<decimal> pensionMensual, Nullable<int> mesesPension, Nullable<int> anniosPension, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioActualizacion, Nullable<System.DateTime> fechaActualizacion, Nullable<bool> activo)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var institucionEducativaIDParameter = institucionEducativaID.HasValue ?
                new ObjectParameter("InstitucionEducativaID", institucionEducativaID) :
                new ObjectParameter("InstitucionEducativaID", typeof(int));
    
            var cIASeguroIDParameter = cIASeguroID.HasValue ?
                new ObjectParameter("CIASeguroID", cIASeguroID) :
                new ObjectParameter("CIASeguroID", typeof(int));
    
            var recaudadorIDParameter = recaudadorID.HasValue ?
                new ObjectParameter("RecaudadorID", recaudadorID) :
                new ObjectParameter("RecaudadorID", typeof(int));
    
            var monedaIDParameter = monedaID.HasValue ?
                new ObjectParameter("MonedaID", monedaID) :
                new ObjectParameter("MonedaID", typeof(int));
    
            var productoIDParameter = productoID.HasValue ?
                new ObjectParameter("ProductoID", productoID) :
                new ObjectParameter("ProductoID", typeof(int));
    
            var tipoPrimaParameter = tipoPrima.HasValue ?
                new ObjectParameter("TipoPrima", tipoPrima) :
                new ObjectParameter("TipoPrima", typeof(bool));
    
            var filePlanSeguroParameter = filePlanSeguro != null ?
                new ObjectParameter("FilePlanSeguro", filePlanSeguro) :
                new ObjectParameter("FilePlanSeguro", typeof(byte[]));
    
            var primaParameter = prima.HasValue ?
                new ObjectParameter("Prima", prima) :
                new ObjectParameter("Prima", typeof(decimal));
    
            var nroPolizaParameter = nroPoliza != null ?
                new ObjectParameter("NroPoliza", nroPoliza) :
                new ObjectParameter("NroPoliza", typeof(string));
    
            var codigoContratanteParameter = codigoContratante != null ?
                new ObjectParameter("CodigoContratante", codigoContratante) :
                new ObjectParameter("CodigoContratante", typeof(string));
    
            var nombreContratanteParameter = nombreContratante != null ?
                new ObjectParameter("NombreContratante", nombreContratante) :
                new ObjectParameter("NombreContratante", typeof(string));
    
            var fechaVigenciaInicioParameter = fechaVigenciaInicio.HasValue ?
                new ObjectParameter("FechaVigenciaInicio", fechaVigenciaInicio) :
                new ObjectParameter("FechaVigenciaInicio", typeof(System.DateTime));
    
            var fechaVigenciaFinParameter = fechaVigenciaFin.HasValue ?
                new ObjectParameter("FechaVigenciaFin", fechaVigenciaFin) :
                new ObjectParameter("FechaVigenciaFin", typeof(System.DateTime));
    
            var fechaVigenciaPolizaInicioParameter = fechaVigenciaPolizaInicio.HasValue ?
                new ObjectParameter("FechaVigenciaPolizaInicio", fechaVigenciaPolizaInicio) :
                new ObjectParameter("FechaVigenciaPolizaInicio", typeof(System.DateTime));
    
            var fechaVigenciaPolizaFinParameter = fechaVigenciaPolizaFin.HasValue ?
                new ObjectParameter("FechaVigenciaPolizaFin", fechaVigenciaPolizaFin) :
                new ObjectParameter("FechaVigenciaPolizaFin", typeof(System.DateTime));
    
            var gastoCuracionParameter = gastoCuracion.HasValue ?
                new ObjectParameter("GastoCuracion", gastoCuracion) :
                new ObjectParameter("GastoCuracion", typeof(decimal));
    
            var invalidezPermanenteTotalParameter = invalidezPermanenteTotal.HasValue ?
                new ObjectParameter("InvalidezPermanenteTotal", invalidezPermanenteTotal) :
                new ObjectParameter("InvalidezPermanenteTotal", typeof(decimal));
    
            var invalidezPermanenteParcialParameter = invalidezPermanenteParcial.HasValue ?
                new ObjectParameter("InvalidezPermanenteParcial", invalidezPermanenteParcial) :
                new ObjectParameter("InvalidezPermanenteParcial", typeof(decimal));
    
            var muerteAccidentalParameter = muerteAccidental.HasValue ?
                new ObjectParameter("MuerteAccidental", muerteAccidental) :
                new ObjectParameter("MuerteAccidental", typeof(decimal));
    
            var gastosSepelioParameter = gastosSepelio.HasValue ?
                new ObjectParameter("GastosSepelio", gastosSepelio) :
                new ObjectParameter("GastosSepelio", typeof(decimal));
    
            var pensionMensualParameter = pensionMensual.HasValue ?
                new ObjectParameter("PensionMensual", pensionMensual) :
                new ObjectParameter("PensionMensual", typeof(decimal));
    
            var mesesPensionParameter = mesesPension.HasValue ?
                new ObjectParameter("MesesPension", mesesPension) :
                new ObjectParameter("MesesPension", typeof(int));
    
            var anniosPensionParameter = anniosPension.HasValue ?
                new ObjectParameter("AnniosPension", anniosPension) :
                new ObjectParameter("AnniosPension", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioActualizacionParameter = usuarioActualizacion != null ?
                new ObjectParameter("UsuarioActualizacion", usuarioActualizacion) :
                new ObjectParameter("UsuarioActualizacion", typeof(string));
    
            var fechaActualizacionParameter = fechaActualizacion.HasValue ?
                new ObjectParameter("FechaActualizacion", fechaActualizacion) :
                new ObjectParameter("FechaActualizacion", typeof(System.DateTime));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_AsociacionInsert", iDParameter, institucionEducativaIDParameter, cIASeguroIDParameter, recaudadorIDParameter, monedaIDParameter, productoIDParameter, tipoPrimaParameter, filePlanSeguroParameter, primaParameter, nroPolizaParameter, codigoContratanteParameter, nombreContratanteParameter, fechaVigenciaInicioParameter, fechaVigenciaFinParameter, fechaVigenciaPolizaInicioParameter, fechaVigenciaPolizaFinParameter, gastoCuracionParameter, invalidezPermanenteTotalParameter, invalidezPermanenteParcialParameter, muerteAccidentalParameter, gastosSepelioParameter, pensionMensualParameter, mesesPensionParameter, anniosPensionParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioActualizacionParameter, fechaActualizacionParameter, activoParameter);
        }
    
        public virtual int USP_BancoInsert(Nullable<int> iD, string nombre, string nombreCorto, string rUC, string direccion, string codigoUbigeo, string nombreAdj, string tipoContenidoAdj, Nullable<long> tamanioAdj, byte[] datoAdj, Nullable<bool> procesoAfiliacion, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioActualizacion, Nullable<System.DateTime> fechaActualizacion, Nullable<bool> estado)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var nombreCortoParameter = nombreCorto != null ?
                new ObjectParameter("NombreCorto", nombreCorto) :
                new ObjectParameter("NombreCorto", typeof(string));
    
            var rUCParameter = rUC != null ?
                new ObjectParameter("RUC", rUC) :
                new ObjectParameter("RUC", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var codigoUbigeoParameter = codigoUbigeo != null ?
                new ObjectParameter("CodigoUbigeo", codigoUbigeo) :
                new ObjectParameter("CodigoUbigeo", typeof(string));
    
            var nombreAdjParameter = nombreAdj != null ?
                new ObjectParameter("NombreAdj", nombreAdj) :
                new ObjectParameter("NombreAdj", typeof(string));
    
            var tipoContenidoAdjParameter = tipoContenidoAdj != null ?
                new ObjectParameter("TipoContenidoAdj", tipoContenidoAdj) :
                new ObjectParameter("TipoContenidoAdj", typeof(string));
    
            var tamanioAdjParameter = tamanioAdj.HasValue ?
                new ObjectParameter("TamanioAdj", tamanioAdj) :
                new ObjectParameter("TamanioAdj", typeof(long));
    
            var datoAdjParameter = datoAdj != null ?
                new ObjectParameter("DatoAdj", datoAdj) :
                new ObjectParameter("DatoAdj", typeof(byte[]));
    
            var procesoAfiliacionParameter = procesoAfiliacion.HasValue ?
                new ObjectParameter("ProcesoAfiliacion", procesoAfiliacion) :
                new ObjectParameter("ProcesoAfiliacion", typeof(bool));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioActualizacionParameter = usuarioActualizacion != null ?
                new ObjectParameter("UsuarioActualizacion", usuarioActualizacion) :
                new ObjectParameter("UsuarioActualizacion", typeof(string));
    
            var fechaActualizacionParameter = fechaActualizacion.HasValue ?
                new ObjectParameter("FechaActualizacion", fechaActualizacion) :
                new ObjectParameter("FechaActualizacion", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_BancoInsert", iDParameter, nombreParameter, nombreCortoParameter, rUCParameter, direccionParameter, codigoUbigeoParameter, nombreAdjParameter, tipoContenidoAdjParameter, tamanioAdjParameter, datoAdjParameter, procesoAfiliacionParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioActualizacionParameter, fechaActualizacionParameter, estadoParameter);
        }
    
        public virtual int USP_BancoParametroInsert(Nullable<int> iD, Nullable<int> bancoParametroID, Nullable<int> bancoID, Nullable<int> cIASeguroID, Nullable<int> bancoParametroTipoID, Nullable<int> orden, string etiqueta, string valor, Nullable<int> longitud, string popertyName, string funcionValidacion, string padDir, string padCaracter, Nullable<bool> esEditableEnIU, Nullable<bool> generaTrama, Nullable<bool> valorFijo, Nullable<bool> activo)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var bancoParametroIDParameter = bancoParametroID.HasValue ?
                new ObjectParameter("BancoParametroID", bancoParametroID) :
                new ObjectParameter("BancoParametroID", typeof(int));
    
            var bancoIDParameter = bancoID.HasValue ?
                new ObjectParameter("BancoID", bancoID) :
                new ObjectParameter("BancoID", typeof(int));
    
            var cIASeguroIDParameter = cIASeguroID.HasValue ?
                new ObjectParameter("CIASeguroID", cIASeguroID) :
                new ObjectParameter("CIASeguroID", typeof(int));
    
            var bancoParametroTipoIDParameter = bancoParametroTipoID.HasValue ?
                new ObjectParameter("BancoParametroTipoID", bancoParametroTipoID) :
                new ObjectParameter("BancoParametroTipoID", typeof(int));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var etiquetaParameter = etiqueta != null ?
                new ObjectParameter("Etiqueta", etiqueta) :
                new ObjectParameter("Etiqueta", typeof(string));
    
            var valorParameter = valor != null ?
                new ObjectParameter("Valor", valor) :
                new ObjectParameter("Valor", typeof(string));
    
            var longitudParameter = longitud.HasValue ?
                new ObjectParameter("Longitud", longitud) :
                new ObjectParameter("Longitud", typeof(int));
    
            var popertyNameParameter = popertyName != null ?
                new ObjectParameter("PopertyName", popertyName) :
                new ObjectParameter("PopertyName", typeof(string));
    
            var funcionValidacionParameter = funcionValidacion != null ?
                new ObjectParameter("FuncionValidacion", funcionValidacion) :
                new ObjectParameter("FuncionValidacion", typeof(string));
    
            var padDirParameter = padDir != null ?
                new ObjectParameter("PadDir", padDir) :
                new ObjectParameter("PadDir", typeof(string));
    
            var padCaracterParameter = padCaracter != null ?
                new ObjectParameter("PadCaracter", padCaracter) :
                new ObjectParameter("PadCaracter", typeof(string));
    
            var esEditableEnIUParameter = esEditableEnIU.HasValue ?
                new ObjectParameter("EsEditableEnIU", esEditableEnIU) :
                new ObjectParameter("EsEditableEnIU", typeof(bool));
    
            var generaTramaParameter = generaTrama.HasValue ?
                new ObjectParameter("GeneraTrama", generaTrama) :
                new ObjectParameter("GeneraTrama", typeof(bool));
    
            var valorFijoParameter = valorFijo.HasValue ?
                new ObjectParameter("ValorFijo", valorFijo) :
                new ObjectParameter("ValorFijo", typeof(bool));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_BancoParametroInsert", iDParameter, bancoParametroIDParameter, bancoIDParameter, cIASeguroIDParameter, bancoParametroTipoIDParameter, ordenParameter, etiquetaParameter, valorParameter, longitudParameter, popertyNameParameter, funcionValidacionParameter, padDirParameter, padCaracterParameter, esEditableEnIUParameter, generaTramaParameter, valorFijoParameter, activoParameter);
        }
    
        public virtual int USP_BancoParametroTipoInsert(Nullable<int> iD, string nombre, Nullable<bool> activo)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_BancoParametroTipoInsert", iDParameter, nombreParameter, activoParameter);
        }
    
        public virtual ObjectResult<USP_BancoselectALL_Result> USP_BancoselectALL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_BancoselectALL_Result>("USP_BancoselectALL");
        }
    
        public virtual ObjectResult<USP_BUSCAR_CODIGOS_AFILIADOS_Result> USP_BUSCAR_CODIGOS_AFILIADOS(Nullable<int> iNSTITUCIONEDUCATIVAID, Nullable<int> pRODUCTOID)
        {
            var iNSTITUCIONEDUCATIVAIDParameter = iNSTITUCIONEDUCATIVAID.HasValue ?
                new ObjectParameter("INSTITUCIONEDUCATIVAID", iNSTITUCIONEDUCATIVAID) :
                new ObjectParameter("INSTITUCIONEDUCATIVAID", typeof(int));
    
            var pRODUCTOIDParameter = pRODUCTOID.HasValue ?
                new ObjectParameter("PRODUCTOID", pRODUCTOID) :
                new ObjectParameter("PRODUCTOID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_BUSCAR_CODIGOS_AFILIADOS_Result>("USP_BUSCAR_CODIGOS_AFILIADOS", iNSTITUCIONEDUCATIVAIDParameter, pRODUCTOIDParameter);
        }
    
        public virtual ObjectResult<USP_BUSCAR_CODIGOS_AFILIADOS_ASOCIACION_Result> USP_BUSCAR_CODIGOS_AFILIADOS_ASOCIACION(Nullable<int> iNSTITUCIONEDUCATIVAID, Nullable<int> pRODUCTOID, Nullable<int> aSOCIACIONID)
        {
            var iNSTITUCIONEDUCATIVAIDParameter = iNSTITUCIONEDUCATIVAID.HasValue ?
                new ObjectParameter("INSTITUCIONEDUCATIVAID", iNSTITUCIONEDUCATIVAID) :
                new ObjectParameter("INSTITUCIONEDUCATIVAID", typeof(int));
    
            var pRODUCTOIDParameter = pRODUCTOID.HasValue ?
                new ObjectParameter("PRODUCTOID", pRODUCTOID) :
                new ObjectParameter("PRODUCTOID", typeof(int));
    
            var aSOCIACIONIDParameter = aSOCIACIONID.HasValue ?
                new ObjectParameter("ASOCIACIONID", aSOCIACIONID) :
                new ObjectParameter("ASOCIACIONID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_BUSCAR_CODIGOS_AFILIADOS_ASOCIACION_Result>("USP_BUSCAR_CODIGOS_AFILIADOS_ASOCIACION", iNSTITUCIONEDUCATIVAIDParameter, pRODUCTOIDParameter, aSOCIACIONIDParameter);
        }
    
        public virtual ObjectResult<USP_BUSCAR_CODIGOS_AFILIADOS_ASOCIADO_Result> USP_BUSCAR_CODIGOS_AFILIADOS_ASOCIADO(Nullable<int> asociacioniD)
        {
            var asociacioniDParameter = asociacioniD.HasValue ?
                new ObjectParameter("asociacioniD", asociacioniD) :
                new ObjectParameter("asociacioniD", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_BUSCAR_CODIGOS_AFILIADOS_ASOCIADO_Result>("USP_BUSCAR_CODIGOS_AFILIADOS_ASOCIADO", asociacioniDParameter);
        }
    
        public virtual ObjectResult<USP_BUSCAR_CODIGOS_AFILIADOS_ASOCIADOS_Result> USP_BUSCAR_CODIGOS_AFILIADOS_ASOCIADOS(Nullable<int> iNSTITUCIONEDUCATIVAID, Nullable<int> pRODUCTOID)
        {
            var iNSTITUCIONEDUCATIVAIDParameter = iNSTITUCIONEDUCATIVAID.HasValue ?
                new ObjectParameter("INSTITUCIONEDUCATIVAID", iNSTITUCIONEDUCATIVAID) :
                new ObjectParameter("INSTITUCIONEDUCATIVAID", typeof(int));
    
            var pRODUCTOIDParameter = pRODUCTOID.HasValue ?
                new ObjectParameter("PRODUCTOID", pRODUCTOID) :
                new ObjectParameter("PRODUCTOID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_BUSCAR_CODIGOS_AFILIADOS_ASOCIADOS_Result>("USP_BUSCAR_CODIGOS_AFILIADOS_ASOCIADOS", iNSTITUCIONEDUCATIVAIDParameter, pRODUCTOIDParameter);
        }
    
        public virtual int USP_CampaniaDetalleInsert(Nullable<int> iD, Nullable<int> campaniaID, Nullable<int> asociacionID, Nullable<bool> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioActualizacion, Nullable<System.DateTime> fechaActualizacion, Nullable<bool> activo)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var campaniaIDParameter = campaniaID.HasValue ?
                new ObjectParameter("CampaniaID", campaniaID) :
                new ObjectParameter("CampaniaID", typeof(int));
    
            var asociacionIDParameter = asociacionID.HasValue ?
                new ObjectParameter("AsociacionID", asociacionID) :
                new ObjectParameter("AsociacionID", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioActualizacionParameter = usuarioActualizacion != null ?
                new ObjectParameter("UsuarioActualizacion", usuarioActualizacion) :
                new ObjectParameter("UsuarioActualizacion", typeof(string));
    
            var fechaActualizacionParameter = fechaActualizacion.HasValue ?
                new ObjectParameter("FechaActualizacion", fechaActualizacion) :
                new ObjectParameter("FechaActualizacion", typeof(System.DateTime));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_CampaniaDetalleInsert", iDParameter, campaniaIDParameter, asociacionIDParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioActualizacionParameter, fechaActualizacionParameter, activoParameter);
        }
    
        public virtual int USP_CampaniaInsert(Nullable<int> iD, string nombre, string descripcion, Nullable<System.DateTime> inicioVigencia, Nullable<System.DateTime> finVigencia, Nullable<bool> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioActualizacion, Nullable<System.DateTime> fechaActualizacion)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var inicioVigenciaParameter = inicioVigencia.HasValue ?
                new ObjectParameter("InicioVigencia", inicioVigencia) :
                new ObjectParameter("InicioVigencia", typeof(System.DateTime));
    
            var finVigenciaParameter = finVigencia.HasValue ?
                new ObjectParameter("FinVigencia", finVigencia) :
                new ObjectParameter("FinVigencia", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioActualizacionParameter = usuarioActualizacion != null ?
                new ObjectParameter("UsuarioActualizacion", usuarioActualizacion) :
                new ObjectParameter("UsuarioActualizacion", typeof(string));
    
            var fechaActualizacionParameter = fechaActualizacion.HasValue ?
                new ObjectParameter("FechaActualizacion", fechaActualizacion) :
                new ObjectParameter("FechaActualizacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_CampaniaInsert", iDParameter, nombreParameter, descripcionParameter, inicioVigenciaParameter, finVigenciaParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioActualizacionParameter, fechaActualizacionParameter);
        }
    
        public virtual int Usp_CampañaInsert(Nullable<int> iD, string nombre, string descripcion, Nullable<System.DateTime> inicioVigencia, Nullable<System.DateTime> finVigencia, Nullable<bool> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioActualizacion, Nullable<System.DateTime> fechaActualizacion)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var inicioVigenciaParameter = inicioVigencia.HasValue ?
                new ObjectParameter("InicioVigencia", inicioVigencia) :
                new ObjectParameter("InicioVigencia", typeof(System.DateTime));
    
            var finVigenciaParameter = finVigencia.HasValue ?
                new ObjectParameter("FinVigencia", finVigencia) :
                new ObjectParameter("FinVigencia", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioActualizacionParameter = usuarioActualizacion != null ?
                new ObjectParameter("UsuarioActualizacion", usuarioActualizacion) :
                new ObjectParameter("UsuarioActualizacion", typeof(string));
    
            var fechaActualizacionParameter = fechaActualizacion.HasValue ?
                new ObjectParameter("FechaActualizacion", fechaActualizacion) :
                new ObjectParameter("FechaActualizacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_CampañaInsert", iDParameter, nombreParameter, descripcionParameter, inicioVigenciaParameter, finVigenciaParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioActualizacionParameter, fechaActualizacionParameter);
        }
    
        public virtual int Usp_CampañaUpdate(Nullable<int> iD, string nombre, string descripcion, Nullable<System.DateTime> inicioVigencia, Nullable<System.DateTime> finVigencia, Nullable<bool> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioActualizacion, Nullable<System.DateTime> fechaActualizacion)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var inicioVigenciaParameter = inicioVigencia.HasValue ?
                new ObjectParameter("InicioVigencia", inicioVigencia) :
                new ObjectParameter("InicioVigencia", typeof(System.DateTime));
    
            var finVigenciaParameter = finVigencia.HasValue ?
                new ObjectParameter("FinVigencia", finVigencia) :
                new ObjectParameter("FinVigencia", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioActualizacionParameter = usuarioActualizacion != null ?
                new ObjectParameter("UsuarioActualizacion", usuarioActualizacion) :
                new ObjectParameter("UsuarioActualizacion", typeof(string));
    
            var fechaActualizacionParameter = fechaActualizacion.HasValue ?
                new ObjectParameter("FechaActualizacion", fechaActualizacion) :
                new ObjectParameter("FechaActualizacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_CampañaUpdate", iDParameter, nombreParameter, descripcionParameter, inicioVigenciaParameter, finVigenciaParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioActualizacionParameter, fechaActualizacionParameter);
        }
    
        public virtual int USP_CaracterEspecialInsert(Nullable<int> iD, Nullable<int> caracterEspecialTipoID, string caracter, string reemplazo, Nullable<bool> permiteIngreso, Nullable<bool> activo)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var caracterEspecialTipoIDParameter = caracterEspecialTipoID.HasValue ?
                new ObjectParameter("CaracterEspecialTipoID", caracterEspecialTipoID) :
                new ObjectParameter("CaracterEspecialTipoID", typeof(int));
    
            var caracterParameter = caracter != null ?
                new ObjectParameter("Caracter", caracter) :
                new ObjectParameter("Caracter", typeof(string));
    
            var reemplazoParameter = reemplazo != null ?
                new ObjectParameter("Reemplazo", reemplazo) :
                new ObjectParameter("Reemplazo", typeof(string));
    
            var permiteIngresoParameter = permiteIngreso.HasValue ?
                new ObjectParameter("PermiteIngreso", permiteIngreso) :
                new ObjectParameter("PermiteIngreso", typeof(bool));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_CaracterEspecialInsert", iDParameter, caracterEspecialTipoIDParameter, caracterParameter, reemplazoParameter, permiteIngresoParameter, activoParameter);
        }
    
        public virtual int USP_CaracterEspecialTipoInsert(Nullable<int> iD, string nombre, string descripcion, Nullable<bool> activo)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_CaracterEspecialTipoInsert", iDParameter, nombreParameter, descripcionParameter, activoParameter);
        }
    
        public virtual ObjectResult<USP_CARGA_HISTORIAL_Result> USP_CARGA_HISTORIAL(Nullable<int> asociacionId)
        {
            var asociacionIdParameter = asociacionId.HasValue ?
                new ObjectParameter("AsociacionId", asociacionId) :
                new ObjectParameter("AsociacionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CARGA_HISTORIAL_Result>("USP_CARGA_HISTORIAL", asociacionIdParameter);
        }
    
        public virtual ObjectResult<USP_CARGA_HISTORIAL_261_Result> USP_CARGA_HISTORIAL_261(Nullable<int> asociacionId)
        {
            var asociacionIdParameter = asociacionId.HasValue ?
                new ObjectParameter("AsociacionId", asociacionId) :
                new ObjectParameter("AsociacionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CARGA_HISTORIAL_261_Result>("USP_CARGA_HISTORIAL_261", asociacionIdParameter);
        }
    
        public virtual int USP_CargaHistorialInsert(Nullable<int> iD, Nullable<int> codigoID, Nullable<int> asociacionID, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, Nullable<bool> activo)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var codigoIDParameter = codigoID.HasValue ?
                new ObjectParameter("CodigoID", codigoID) :
                new ObjectParameter("CodigoID", typeof(int));
    
            var asociacionIDParameter = asociacionID.HasValue ?
                new ObjectParameter("AsociacionID", asociacionID) :
                new ObjectParameter("AsociacionID", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_CargaHistorialInsert", iDParameter, codigoIDParameter, asociacionIDParameter, usuarioCreacionParameter, fechaCreacionParameter, activoParameter);
        }
    
        public virtual int USP_CargaTxtParametroInsert(Nullable<int> iD, Nullable<int> bancoID, Nullable<int> bancoParametroTipoID, Nullable<int> orden, string nombreColumna, string descripcionColumna, string popertyName, string valor, Nullable<int> longitud, Nullable<int> posicionStart, Nullable<int> posicionEnd, Nullable<bool> isMappingEntity, Nullable<bool> actvo)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var bancoIDParameter = bancoID.HasValue ?
                new ObjectParameter("BancoID", bancoID) :
                new ObjectParameter("BancoID", typeof(int));
    
            var bancoParametroTipoIDParameter = bancoParametroTipoID.HasValue ?
                new ObjectParameter("BancoParametroTipoID", bancoParametroTipoID) :
                new ObjectParameter("BancoParametroTipoID", typeof(int));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var nombreColumnaParameter = nombreColumna != null ?
                new ObjectParameter("NombreColumna", nombreColumna) :
                new ObjectParameter("NombreColumna", typeof(string));
    
            var descripcionColumnaParameter = descripcionColumna != null ?
                new ObjectParameter("DescripcionColumna", descripcionColumna) :
                new ObjectParameter("DescripcionColumna", typeof(string));
    
            var popertyNameParameter = popertyName != null ?
                new ObjectParameter("PopertyName", popertyName) :
                new ObjectParameter("PopertyName", typeof(string));
    
            var valorParameter = valor != null ?
                new ObjectParameter("Valor", valor) :
                new ObjectParameter("Valor", typeof(string));
    
            var longitudParameter = longitud.HasValue ?
                new ObjectParameter("Longitud", longitud) :
                new ObjectParameter("Longitud", typeof(int));
    
            var posicionStartParameter = posicionStart.HasValue ?
                new ObjectParameter("PosicionStart", posicionStart) :
                new ObjectParameter("PosicionStart", typeof(int));
    
            var posicionEndParameter = posicionEnd.HasValue ?
                new ObjectParameter("PosicionEnd", posicionEnd) :
                new ObjectParameter("PosicionEnd", typeof(int));
    
            var isMappingEntityParameter = isMappingEntity.HasValue ?
                new ObjectParameter("IsMappingEntity", isMappingEntity) :
                new ObjectParameter("IsMappingEntity", typeof(bool));
    
            var actvoParameter = actvo.HasValue ?
                new ObjectParameter("Actvo", actvo) :
                new ObjectParameter("Actvo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_CargaTxtParametroInsert", iDParameter, bancoIDParameter, bancoParametroTipoIDParameter, ordenParameter, nombreColumnaParameter, descripcionColumnaParameter, popertyNameParameter, valorParameter, longitudParameter, posicionStartParameter, posicionEndParameter, isMappingEntityParameter, actvoParameter);
        }
    
        public virtual int USP_ChequeInsert(Nullable<int> iD, Nullable<int> campaniaID, Nullable<int> institucionEducativaID, Nullable<int> cIASeguroID, Nullable<int> productoID, Nullable<int> bancoID, Nullable<int> monedaID, Nullable<System.DateTime> fecha, string nroCheque, Nullable<decimal> monto, string concepto, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioActualizacion, Nullable<System.DateTime> fechaActualizacion, Nullable<bool> activo)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var campaniaIDParameter = campaniaID.HasValue ?
                new ObjectParameter("CampaniaID", campaniaID) :
                new ObjectParameter("CampaniaID", typeof(int));
    
            var institucionEducativaIDParameter = institucionEducativaID.HasValue ?
                new ObjectParameter("InstitucionEducativaID", institucionEducativaID) :
                new ObjectParameter("InstitucionEducativaID", typeof(int));
    
            var cIASeguroIDParameter = cIASeguroID.HasValue ?
                new ObjectParameter("CIASeguroID", cIASeguroID) :
                new ObjectParameter("CIASeguroID", typeof(int));
    
            var productoIDParameter = productoID.HasValue ?
                new ObjectParameter("ProductoID", productoID) :
                new ObjectParameter("ProductoID", typeof(int));
    
            var bancoIDParameter = bancoID.HasValue ?
                new ObjectParameter("BancoID", bancoID) :
                new ObjectParameter("BancoID", typeof(int));
    
            var monedaIDParameter = monedaID.HasValue ?
                new ObjectParameter("MonedaID", monedaID) :
                new ObjectParameter("MonedaID", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var nroChequeParameter = nroCheque != null ?
                new ObjectParameter("NroCheque", nroCheque) :
                new ObjectParameter("NroCheque", typeof(string));
    
            var montoParameter = monto.HasValue ?
                new ObjectParameter("Monto", monto) :
                new ObjectParameter("Monto", typeof(decimal));
    
            var conceptoParameter = concepto != null ?
                new ObjectParameter("Concepto", concepto) :
                new ObjectParameter("Concepto", typeof(string));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioActualizacionParameter = usuarioActualizacion != null ?
                new ObjectParameter("UsuarioActualizacion", usuarioActualizacion) :
                new ObjectParameter("UsuarioActualizacion", typeof(string));
    
            var fechaActualizacionParameter = fechaActualizacion.HasValue ?
                new ObjectParameter("FechaActualizacion", fechaActualizacion) :
                new ObjectParameter("FechaActualizacion", typeof(System.DateTime));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_ChequeInsert", iDParameter, campaniaIDParameter, institucionEducativaIDParameter, cIASeguroIDParameter, productoIDParameter, bancoIDParameter, monedaIDParameter, fechaParameter, nroChequeParameter, montoParameter, conceptoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioActualizacionParameter, fechaActualizacionParameter, activoParameter);
        }
    
        public virtual int USP_CIASeguroInsert(Nullable<int> iD, string nombre, string rUC, string direccion, string codigoUbigeo, string nombreAdj, string tipoContenidoAdj, Nullable<long> tamanioAdj, byte[] datoAdj, Nullable<bool> isEmpresaRecaudadora, Nullable<bool> estado, string codigo, string terminosCondiciones, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioActualizacion, Nullable<System.DateTime> fechaActualizacion)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var rUCParameter = rUC != null ?
                new ObjectParameter("RUC", rUC) :
                new ObjectParameter("RUC", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var codigoUbigeoParameter = codigoUbigeo != null ?
                new ObjectParameter("CodigoUbigeo", codigoUbigeo) :
                new ObjectParameter("CodigoUbigeo", typeof(string));
    
            var nombreAdjParameter = nombreAdj != null ?
                new ObjectParameter("NombreAdj", nombreAdj) :
                new ObjectParameter("NombreAdj", typeof(string));
    
            var tipoContenidoAdjParameter = tipoContenidoAdj != null ?
                new ObjectParameter("TipoContenidoAdj", tipoContenidoAdj) :
                new ObjectParameter("TipoContenidoAdj", typeof(string));
    
            var tamanioAdjParameter = tamanioAdj.HasValue ?
                new ObjectParameter("TamanioAdj", tamanioAdj) :
                new ObjectParameter("TamanioAdj", typeof(long));
    
            var datoAdjParameter = datoAdj != null ?
                new ObjectParameter("DatoAdj", datoAdj) :
                new ObjectParameter("DatoAdj", typeof(byte[]));
    
            var isEmpresaRecaudadoraParameter = isEmpresaRecaudadora.HasValue ?
                new ObjectParameter("IsEmpresaRecaudadora", isEmpresaRecaudadora) :
                new ObjectParameter("IsEmpresaRecaudadora", typeof(bool));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var terminosCondicionesParameter = terminosCondiciones != null ?
                new ObjectParameter("TerminosCondiciones", terminosCondiciones) :
                new ObjectParameter("TerminosCondiciones", typeof(string));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioActualizacionParameter = usuarioActualizacion != null ?
                new ObjectParameter("UsuarioActualizacion", usuarioActualizacion) :
                new ObjectParameter("UsuarioActualizacion", typeof(string));
    
            var fechaActualizacionParameter = fechaActualizacion.HasValue ?
                new ObjectParameter("FechaActualizacion", fechaActualizacion) :
                new ObjectParameter("FechaActualizacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_CIASeguroInsert", iDParameter, nombreParameter, rUCParameter, direccionParameter, codigoUbigeoParameter, nombreAdjParameter, tipoContenidoAdjParameter, tamanioAdjParameter, datoAdjParameter, isEmpresaRecaudadoraParameter, estadoParameter, codigoParameter, terminosCondicionesParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioActualizacionParameter, fechaActualizacionParameter);
        }
    
        public virtual int USP_CIASeguroProductoInsert(Nullable<int> iD, Nullable<int> cIASeguroID, Nullable<int> productoID, Nullable<int> configuracionArchivoID, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioActualizacion, Nullable<System.DateTime> fechaActualizacion, Nullable<bool> activo)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var cIASeguroIDParameter = cIASeguroID.HasValue ?
                new ObjectParameter("CIASeguroID", cIASeguroID) :
                new ObjectParameter("CIASeguroID", typeof(int));
    
            var productoIDParameter = productoID.HasValue ?
                new ObjectParameter("ProductoID", productoID) :
                new ObjectParameter("ProductoID", typeof(int));
    
            var configuracionArchivoIDParameter = configuracionArchivoID.HasValue ?
                new ObjectParameter("ConfiguracionArchivoID", configuracionArchivoID) :
                new ObjectParameter("ConfiguracionArchivoID", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioActualizacionParameter = usuarioActualizacion != null ?
                new ObjectParameter("UsuarioActualizacion", usuarioActualizacion) :
                new ObjectParameter("UsuarioActualizacion", typeof(string));
    
            var fechaActualizacionParameter = fechaActualizacion.HasValue ?
                new ObjectParameter("FechaActualizacion", fechaActualizacion) :
                new ObjectParameter("FechaActualizacion", typeof(System.DateTime));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_CIASeguroProductoInsert", iDParameter, cIASeguroIDParameter, productoIDParameter, configuracionArchivoIDParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioActualizacionParameter, fechaActualizacionParameter, activoParameter);
        }
    
        public virtual ObjectResult<USP_CierresEnInstituciones_Result> USP_CierresEnInstituciones(Nullable<int> idCampaña)
        {
            var idCampañaParameter = idCampaña.HasValue ?
                new ObjectParameter("IdCampaña", idCampaña) :
                new ObjectParameter("IdCampaña", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CierresEnInstituciones_Result>("USP_CierresEnInstituciones", idCampañaParameter);
        }
    
        public virtual int USP_CodigoDetalleInsert(Nullable<int> iD, Nullable<int> codigoID, Nullable<int> cargaHistorialID, Nullable<int> productoID, Nullable<int> afiliacionSeguroID, Nullable<int> afiliacionSeguroAlumnoID, Nullable<int> afiliacionSeguroPadreID, Nullable<int> correlativo, string codigo, string descripcion, Nullable<bool> recibidoBanco, Nullable<bool> tipoCarga, string observacion, Nullable<System.DateTime> fechaPago, string operacionBancaria, Nullable<int> monedaPagoID, Nullable<int> bancoPagoID, Nullable<bool> isPagado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioActualizacion, Nullable<System.DateTime> fechaActualizacion, Nullable<bool> activo)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var codigoIDParameter = codigoID.HasValue ?
                new ObjectParameter("CodigoID", codigoID) :
                new ObjectParameter("CodigoID", typeof(int));
    
            var cargaHistorialIDParameter = cargaHistorialID.HasValue ?
                new ObjectParameter("CargaHistorialID", cargaHistorialID) :
                new ObjectParameter("CargaHistorialID", typeof(int));
    
            var productoIDParameter = productoID.HasValue ?
                new ObjectParameter("ProductoID", productoID) :
                new ObjectParameter("ProductoID", typeof(int));
    
            var afiliacionSeguroIDParameter = afiliacionSeguroID.HasValue ?
                new ObjectParameter("AfiliacionSeguroID", afiliacionSeguroID) :
                new ObjectParameter("AfiliacionSeguroID", typeof(int));
    
            var afiliacionSeguroAlumnoIDParameter = afiliacionSeguroAlumnoID.HasValue ?
                new ObjectParameter("AfiliacionSeguroAlumnoID", afiliacionSeguroAlumnoID) :
                new ObjectParameter("AfiliacionSeguroAlumnoID", typeof(int));
    
            var afiliacionSeguroPadreIDParameter = afiliacionSeguroPadreID.HasValue ?
                new ObjectParameter("AfiliacionSeguroPadreID", afiliacionSeguroPadreID) :
                new ObjectParameter("AfiliacionSeguroPadreID", typeof(int));
    
            var correlativoParameter = correlativo.HasValue ?
                new ObjectParameter("Correlativo", correlativo) :
                new ObjectParameter("Correlativo", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var recibidoBancoParameter = recibidoBanco.HasValue ?
                new ObjectParameter("RecibidoBanco", recibidoBanco) :
                new ObjectParameter("RecibidoBanco", typeof(bool));
    
            var tipoCargaParameter = tipoCarga.HasValue ?
                new ObjectParameter("TipoCarga", tipoCarga) :
                new ObjectParameter("TipoCarga", typeof(bool));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));
    
            var fechaPagoParameter = fechaPago.HasValue ?
                new ObjectParameter("FechaPago", fechaPago) :
                new ObjectParameter("FechaPago", typeof(System.DateTime));
    
            var operacionBancariaParameter = operacionBancaria != null ?
                new ObjectParameter("OperacionBancaria", operacionBancaria) :
                new ObjectParameter("OperacionBancaria", typeof(string));
    
            var monedaPagoIDParameter = monedaPagoID.HasValue ?
                new ObjectParameter("MonedaPagoID", monedaPagoID) :
                new ObjectParameter("MonedaPagoID", typeof(int));
    
            var bancoPagoIDParameter = bancoPagoID.HasValue ?
                new ObjectParameter("BancoPagoID", bancoPagoID) :
                new ObjectParameter("BancoPagoID", typeof(int));
    
            var isPagadoParameter = isPagado.HasValue ?
                new ObjectParameter("IsPagado", isPagado) :
                new ObjectParameter("IsPagado", typeof(bool));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioActualizacionParameter = usuarioActualizacion != null ?
                new ObjectParameter("UsuarioActualizacion", usuarioActualizacion) :
                new ObjectParameter("UsuarioActualizacion", typeof(string));
    
            var fechaActualizacionParameter = fechaActualizacion.HasValue ?
                new ObjectParameter("FechaActualizacion", fechaActualizacion) :
                new ObjectParameter("FechaActualizacion", typeof(System.DateTime));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_CodigoDetalleInsert", iDParameter, codigoIDParameter, cargaHistorialIDParameter, productoIDParameter, afiliacionSeguroIDParameter, afiliacionSeguroAlumnoIDParameter, afiliacionSeguroPadreIDParameter, correlativoParameter, codigoParameter, descripcionParameter, recibidoBancoParameter, tipoCargaParameter, observacionParameter, fechaPagoParameter, operacionBancariaParameter, monedaPagoIDParameter, bancoPagoIDParameter, isPagadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioActualizacionParameter, fechaActualizacionParameter, activoParameter);
        }
    
        public virtual int USP_CodigoDetallePagoInsert(Nullable<int> iD, Nullable<int> codigoDetalleID, Nullable<System.DateTime> fechaPago, string operacionBancaria, Nullable<int> monedaPagoID, Nullable<int> bancoPagoID, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var codigoDetalleIDParameter = codigoDetalleID.HasValue ?
                new ObjectParameter("CodigoDetalleID", codigoDetalleID) :
                new ObjectParameter("CodigoDetalleID", typeof(int));
    
            var fechaPagoParameter = fechaPago.HasValue ?
                new ObjectParameter("FechaPago", fechaPago) :
                new ObjectParameter("FechaPago", typeof(System.DateTime));
    
            var operacionBancariaParameter = operacionBancaria != null ?
                new ObjectParameter("OperacionBancaria", operacionBancaria) :
                new ObjectParameter("OperacionBancaria", typeof(string));
    
            var monedaPagoIDParameter = monedaPagoID.HasValue ?
                new ObjectParameter("MonedaPagoID", monedaPagoID) :
                new ObjectParameter("MonedaPagoID", typeof(int));
    
            var bancoPagoIDParameter = bancoPagoID.HasValue ?
                new ObjectParameter("BancoPagoID", bancoPagoID) :
                new ObjectParameter("BancoPagoID", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_CodigoDetallePagoInsert", iDParameter, codigoDetalleIDParameter, fechaPagoParameter, operacionBancariaParameter, monedaPagoIDParameter, bancoPagoIDParameter, usuarioCreacionParameter, fechaCreacionParameter);
        }
    
        public virtual int USP_CodigoInsert(Nullable<int> iD, Nullable<int> asociacionID, Nullable<int> institucionEducativaID, Nullable<int> productoID, Nullable<int> cIASeguroID, Nullable<int> cantidad, string descripcion, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioActualizacion, Nullable<System.DateTime> fechaActualizacion)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var asociacionIDParameter = asociacionID.HasValue ?
                new ObjectParameter("AsociacionID", asociacionID) :
                new ObjectParameter("AsociacionID", typeof(int));
    
            var institucionEducativaIDParameter = institucionEducativaID.HasValue ?
                new ObjectParameter("InstitucionEducativaID", institucionEducativaID) :
                new ObjectParameter("InstitucionEducativaID", typeof(int));
    
            var productoIDParameter = productoID.HasValue ?
                new ObjectParameter("ProductoID", productoID) :
                new ObjectParameter("ProductoID", typeof(int));
    
            var cIASeguroIDParameter = cIASeguroID.HasValue ?
                new ObjectParameter("CIASeguroID", cIASeguroID) :
                new ObjectParameter("CIASeguroID", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioActualizacionParameter = usuarioActualizacion != null ?
                new ObjectParameter("UsuarioActualizacion", usuarioActualizacion) :
                new ObjectParameter("UsuarioActualizacion", typeof(string));
    
            var fechaActualizacionParameter = fechaActualizacion.HasValue ?
                new ObjectParameter("FechaActualizacion", fechaActualizacion) :
                new ObjectParameter("FechaActualizacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_CodigoInsert", iDParameter, asociacionIDParameter, institucionEducativaIDParameter, productoIDParameter, cIASeguroIDParameter, cantidadParameter, descripcionParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioActualizacionParameter, fechaActualizacionParameter);
        }
    
        public virtual int USP_ConfiguracionArchivoDetalleInsert(Nullable<int> iD, Nullable<int> configuracionArchivoID, Nullable<int> indiceColumna, string nombreColumna, string descripcionColumna, Nullable<int> tamannioColumna, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioActualizacion, Nullable<System.DateTime> fechaActualizacion, Nullable<bool> activo)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var configuracionArchivoIDParameter = configuracionArchivoID.HasValue ?
                new ObjectParameter("ConfiguracionArchivoID", configuracionArchivoID) :
                new ObjectParameter("ConfiguracionArchivoID", typeof(int));
    
            var indiceColumnaParameter = indiceColumna.HasValue ?
                new ObjectParameter("IndiceColumna", indiceColumna) :
                new ObjectParameter("IndiceColumna", typeof(int));
    
            var nombreColumnaParameter = nombreColumna != null ?
                new ObjectParameter("NombreColumna", nombreColumna) :
                new ObjectParameter("NombreColumna", typeof(string));
    
            var descripcionColumnaParameter = descripcionColumna != null ?
                new ObjectParameter("DescripcionColumna", descripcionColumna) :
                new ObjectParameter("DescripcionColumna", typeof(string));
    
            var tamannioColumnaParameter = tamannioColumna.HasValue ?
                new ObjectParameter("TamannioColumna", tamannioColumna) :
                new ObjectParameter("TamannioColumna", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioActualizacionParameter = usuarioActualizacion != null ?
                new ObjectParameter("UsuarioActualizacion", usuarioActualizacion) :
                new ObjectParameter("UsuarioActualizacion", typeof(string));
    
            var fechaActualizacionParameter = fechaActualizacion.HasValue ?
                new ObjectParameter("FechaActualizacion", fechaActualizacion) :
                new ObjectParameter("FechaActualizacion", typeof(System.DateTime));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_ConfiguracionArchivoDetalleInsert", iDParameter, configuracionArchivoIDParameter, indiceColumnaParameter, nombreColumnaParameter, descripcionColumnaParameter, tamannioColumnaParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioActualizacionParameter, fechaActualizacionParameter, activoParameter);
        }
    
        public virtual int USP_ConfiguracionArchivoInsert(Nullable<int> iD, Nullable<int> configuracionArchivoTipoID, Nullable<int> cIASeguroID, Nullable<int> productoID, string nombre, string descripcion, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioActualizacion, Nullable<System.DateTime> fechaActualizacion, Nullable<bool> activo)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var configuracionArchivoTipoIDParameter = configuracionArchivoTipoID.HasValue ?
                new ObjectParameter("ConfiguracionArchivoTipoID", configuracionArchivoTipoID) :
                new ObjectParameter("ConfiguracionArchivoTipoID", typeof(int));
    
            var cIASeguroIDParameter = cIASeguroID.HasValue ?
                new ObjectParameter("CIASeguroID", cIASeguroID) :
                new ObjectParameter("CIASeguroID", typeof(int));
    
            var productoIDParameter = productoID.HasValue ?
                new ObjectParameter("ProductoID", productoID) :
                new ObjectParameter("ProductoID", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioActualizacionParameter = usuarioActualizacion != null ?
                new ObjectParameter("UsuarioActualizacion", usuarioActualizacion) :
                new ObjectParameter("UsuarioActualizacion", typeof(string));
    
            var fechaActualizacionParameter = fechaActualizacion.HasValue ?
                new ObjectParameter("FechaActualizacion", fechaActualizacion) :
                new ObjectParameter("FechaActualizacion", typeof(System.DateTime));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_ConfiguracionArchivoInsert", iDParameter, configuracionArchivoTipoIDParameter, cIASeguroIDParameter, productoIDParameter, nombreParameter, descripcionParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioActualizacionParameter, fechaActualizacionParameter, activoParameter);
        }
    
        public virtual int USP_ConfiguracionArchivoTipoInsert(Nullable<int> iD, string nombre, string descripcion, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioActualizacion, Nullable<System.DateTime> fechaActualizacion, Nullable<bool> activo)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioActualizacionParameter = usuarioActualizacion != null ?
                new ObjectParameter("UsuarioActualizacion", usuarioActualizacion) :
                new ObjectParameter("UsuarioActualizacion", typeof(string));
    
            var fechaActualizacionParameter = fechaActualizacion.HasValue ?
                new ObjectParameter("FechaActualizacion", fechaActualizacion) :
                new ObjectParameter("FechaActualizacion", typeof(System.DateTime));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_ConfiguracionArchivoTipoInsert", iDParameter, nombreParameter, descripcionParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioActualizacionParameter, fechaActualizacionParameter, activoParameter);
        }
    
        public virtual ObjectResult<USP_CONSULTARCAMPAÑAS_Result> USP_CONSULTARCAMPAÑAS(Nullable<int> iD, string tIPO)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var tIPOParameter = tIPO != null ?
                new ObjectParameter("TIPO", tIPO) :
                new ObjectParameter("TIPO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CONSULTARCAMPAÑAS_Result>("USP_CONSULTARCAMPAÑAS", iDParameter, tIPOParameter);
        }
    
        public virtual int USP_ContactoInsert(Nullable<int> iD, Nullable<int> bancoID, Nullable<int> institucionEducativaID, string nombre, string apellidoPaterno, string apellidoMaterno, string email, string cargo, Nullable<bool> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioActualizado, Nullable<System.DateTime> fechaActualizacion)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var bancoIDParameter = bancoID.HasValue ?
                new ObjectParameter("BancoID", bancoID) :
                new ObjectParameter("BancoID", typeof(int));
    
            var institucionEducativaIDParameter = institucionEducativaID.HasValue ?
                new ObjectParameter("InstitucionEducativaID", institucionEducativaID) :
                new ObjectParameter("InstitucionEducativaID", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var cargoParameter = cargo != null ?
                new ObjectParameter("Cargo", cargo) :
                new ObjectParameter("Cargo", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioActualizadoParameter = usuarioActualizado != null ?
                new ObjectParameter("UsuarioActualizado", usuarioActualizado) :
                new ObjectParameter("UsuarioActualizado", typeof(string));
    
            var fechaActualizacionParameter = fechaActualizacion.HasValue ?
                new ObjectParameter("FechaActualizacion", fechaActualizacion) :
                new ObjectParameter("FechaActualizacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_ContactoInsert", iDParameter, bancoIDParameter, institucionEducativaIDParameter, nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, emailParameter, cargoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioActualizadoParameter, fechaActualizacionParameter);
        }
    
        public virtual int USP_CuentaInsert(Nullable<int> iD, Nullable<int> codigoCIASeguro, string numero, Nullable<int> tipoMonedaID, Nullable<int> bancoID, Nullable<bool> predeterminado, Nullable<bool> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioActualizacion, Nullable<System.DateTime> fechaActualizacion)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var codigoCIASeguroParameter = codigoCIASeguro.HasValue ?
                new ObjectParameter("CodigoCIASeguro", codigoCIASeguro) :
                new ObjectParameter("CodigoCIASeguro", typeof(int));
    
            var numeroParameter = numero != null ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(string));
    
            var tipoMonedaIDParameter = tipoMonedaID.HasValue ?
                new ObjectParameter("TipoMonedaID", tipoMonedaID) :
                new ObjectParameter("TipoMonedaID", typeof(int));
    
            var bancoIDParameter = bancoID.HasValue ?
                new ObjectParameter("BancoID", bancoID) :
                new ObjectParameter("BancoID", typeof(int));
    
            var predeterminadoParameter = predeterminado.HasValue ?
                new ObjectParameter("Predeterminado", predeterminado) :
                new ObjectParameter("Predeterminado", typeof(bool));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioActualizacionParameter = usuarioActualizacion != null ?
                new ObjectParameter("UsuarioActualizacion", usuarioActualizacion) :
                new ObjectParameter("UsuarioActualizacion", typeof(string));
    
            var fechaActualizacionParameter = fechaActualizacion.HasValue ?
                new ObjectParameter("FechaActualizacion", fechaActualizacion) :
                new ObjectParameter("FechaActualizacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_CuentaInsert", iDParameter, codigoCIASeguroParameter, numeroParameter, tipoMonedaIDParameter, bancoIDParameter, predeterminadoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioActualizacionParameter, fechaActualizacionParameter);
        }
    
        public virtual int USP_ELIMINAR_AFILIACION(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_ELIMINAR_AFILIACION", idParameter);
        }
    
        public virtual int USP_ELIMINAR_AFILIACION2(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_ELIMINAR_AFILIACION2", idParameter);
        }
    
        public virtual int USP_ELIMINAR_COD_SEGURO(string cODIGO, Nullable<int> iD)
        {
            var cODIGOParameter = cODIGO != null ?
                new ObjectParameter("CODIGO", cODIGO) :
                new ObjectParameter("CODIGO", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_ELIMINAR_COD_SEGURO", cODIGOParameter, iDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_EXISTE_CTA_BANCO(Nullable<int> iDBANCO, Nullable<int> idasociacion)
        {
            var iDBANCOParameter = iDBANCO.HasValue ?
                new ObjectParameter("IDBANCO", iDBANCO) :
                new ObjectParameter("IDBANCO", typeof(int));
    
            var idasociacionParameter = idasociacion.HasValue ?
                new ObjectParameter("idasociacion", idasociacion) :
                new ObjectParameter("idasociacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_EXISTE_CTA_BANCO", iDBANCOParameter, idasociacionParameter);
        }
    
        public virtual ObjectResult<USP_EXPORTARCODIGOS_ACCIDENTES_Result> USP_EXPORTARCODIGOS_ACCIDENTES(Nullable<int> cODIGO, Nullable<int> cANT)
        {
            var cODIGOParameter = cODIGO.HasValue ?
                new ObjectParameter("CODIGO", cODIGO) :
                new ObjectParameter("CODIGO", typeof(int));
    
            var cANTParameter = cANT.HasValue ?
                new ObjectParameter("CANT", cANT) :
                new ObjectParameter("CANT", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_EXPORTARCODIGOS_ACCIDENTES_Result>("USP_EXPORTARCODIGOS_ACCIDENTES", cODIGOParameter, cANTParameter);
        }
    
        public virtual ObjectResult<USP_EXPORTARCODIGOS_RENTAS_Result> USP_EXPORTARCODIGOS_RENTAS(Nullable<int> cODIGO)
        {
            var cODIGOParameter = cODIGO.HasValue ?
                new ObjectParameter("CODIGO", cODIGO) :
                new ObjectParameter("CODIGO", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_EXPORTARCODIGOS_RENTAS_Result>("USP_EXPORTARCODIGOS_RENTAS", cODIGOParameter);
        }
    
        public virtual int USP_GradoInsert(Nullable<int> iD, string codigo, Nullable<int> orden, string nombre, Nullable<bool> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioActualizacion, Nullable<System.DateTime> fechaActualizacion)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioActualizacionParameter = usuarioActualizacion != null ?
                new ObjectParameter("UsuarioActualizacion", usuarioActualizacion) :
                new ObjectParameter("UsuarioActualizacion", typeof(string));
    
            var fechaActualizacionParameter = fechaActualizacion.HasValue ?
                new ObjectParameter("FechaActualizacion", fechaActualizacion) :
                new ObjectParameter("FechaActualizacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_GradoInsert", iDParameter, codigoParameter, ordenParameter, nombreParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioActualizacionParameter, fechaActualizacionParameter);
        }
    
        public virtual int USP_InstitucionEducativaInsert(Nullable<int> iD, Nullable<int> tipoInstitucionEducativaID, Nullable<int> tipoDocumentoID, string codigo, string nombre, string razonSocial, Nullable<int> tipoEmpresa, string numeroDocumento, string codigoUbigeo, string direccion, string telefono, string fax, string apellidoPaternno, string apellidoMaterno, string nombreNatural, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioActualizacion, Nullable<System.DateTime> fechaActualizacion, Nullable<bool> activo)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var tipoInstitucionEducativaIDParameter = tipoInstitucionEducativaID.HasValue ?
                new ObjectParameter("TipoInstitucionEducativaID", tipoInstitucionEducativaID) :
                new ObjectParameter("TipoInstitucionEducativaID", typeof(int));
    
            var tipoDocumentoIDParameter = tipoDocumentoID.HasValue ?
                new ObjectParameter("TipoDocumentoID", tipoDocumentoID) :
                new ObjectParameter("TipoDocumentoID", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var razonSocialParameter = razonSocial != null ?
                new ObjectParameter("RazonSocial", razonSocial) :
                new ObjectParameter("RazonSocial", typeof(string));
    
            var tipoEmpresaParameter = tipoEmpresa.HasValue ?
                new ObjectParameter("TipoEmpresa", tipoEmpresa) :
                new ObjectParameter("TipoEmpresa", typeof(int));
    
            var numeroDocumentoParameter = numeroDocumento != null ?
                new ObjectParameter("NumeroDocumento", numeroDocumento) :
                new ObjectParameter("NumeroDocumento", typeof(string));
    
            var codigoUbigeoParameter = codigoUbigeo != null ?
                new ObjectParameter("CodigoUbigeo", codigoUbigeo) :
                new ObjectParameter("CodigoUbigeo", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var apellidoPaternnoParameter = apellidoPaternno != null ?
                new ObjectParameter("ApellidoPaternno", apellidoPaternno) :
                new ObjectParameter("ApellidoPaternno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var nombreNaturalParameter = nombreNatural != null ?
                new ObjectParameter("NombreNatural", nombreNatural) :
                new ObjectParameter("NombreNatural", typeof(string));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioActualizacionParameter = usuarioActualizacion != null ?
                new ObjectParameter("UsuarioActualizacion", usuarioActualizacion) :
                new ObjectParameter("UsuarioActualizacion", typeof(string));
    
            var fechaActualizacionParameter = fechaActualizacion.HasValue ?
                new ObjectParameter("FechaActualizacion", fechaActualizacion) :
                new ObjectParameter("FechaActualizacion", typeof(System.DateTime));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_InstitucionEducativaInsert", iDParameter, tipoInstitucionEducativaIDParameter, tipoDocumentoIDParameter, codigoParameter, nombreParameter, razonSocialParameter, tipoEmpresaParameter, numeroDocumentoParameter, codigoUbigeoParameter, direccionParameter, telefonoParameter, faxParameter, apellidoPaternnoParameter, apellidoMaternoParameter, nombreNaturalParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioActualizacionParameter, fechaActualizacionParameter, activoParameter);
        }
    
        public virtual int USP_InstitucionEducativaUpdate(Nullable<int> iD, Nullable<int> tipoInstitucionEducativaID, Nullable<int> tipoDocumentoID, string codigo, string nombre, string razonSocial, Nullable<int> tipoEmpresa, string numeroDocumento, string codigoUbigeo, string direccion, string telefono, string fax, string apellidoPaternno, string apellidoMaterno, string nombreNatural, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioActualizacion, Nullable<System.DateTime> fechaActualizacion, Nullable<bool> activo)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var tipoInstitucionEducativaIDParameter = tipoInstitucionEducativaID.HasValue ?
                new ObjectParameter("TipoInstitucionEducativaID", tipoInstitucionEducativaID) :
                new ObjectParameter("TipoInstitucionEducativaID", typeof(int));
    
            var tipoDocumentoIDParameter = tipoDocumentoID.HasValue ?
                new ObjectParameter("TipoDocumentoID", tipoDocumentoID) :
                new ObjectParameter("TipoDocumentoID", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var razonSocialParameter = razonSocial != null ?
                new ObjectParameter("RazonSocial", razonSocial) :
                new ObjectParameter("RazonSocial", typeof(string));
    
            var tipoEmpresaParameter = tipoEmpresa.HasValue ?
                new ObjectParameter("TipoEmpresa", tipoEmpresa) :
                new ObjectParameter("TipoEmpresa", typeof(int));
    
            var numeroDocumentoParameter = numeroDocumento != null ?
                new ObjectParameter("NumeroDocumento", numeroDocumento) :
                new ObjectParameter("NumeroDocumento", typeof(string));
    
            var codigoUbigeoParameter = codigoUbigeo != null ?
                new ObjectParameter("CodigoUbigeo", codigoUbigeo) :
                new ObjectParameter("CodigoUbigeo", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var apellidoPaternnoParameter = apellidoPaternno != null ?
                new ObjectParameter("ApellidoPaternno", apellidoPaternno) :
                new ObjectParameter("ApellidoPaternno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var nombreNaturalParameter = nombreNatural != null ?
                new ObjectParameter("NombreNatural", nombreNatural) :
                new ObjectParameter("NombreNatural", typeof(string));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioActualizacionParameter = usuarioActualizacion != null ?
                new ObjectParameter("UsuarioActualizacion", usuarioActualizacion) :
                new ObjectParameter("UsuarioActualizacion", typeof(string));
    
            var fechaActualizacionParameter = fechaActualizacion.HasValue ?
                new ObjectParameter("FechaActualizacion", fechaActualizacion) :
                new ObjectParameter("FechaActualizacion", typeof(System.DateTime));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_InstitucionEducativaUpdate", iDParameter, tipoInstitucionEducativaIDParameter, tipoDocumentoIDParameter, codigoParameter, nombreParameter, razonSocialParameter, tipoEmpresaParameter, numeroDocumentoParameter, codigoUbigeoParameter, direccionParameter, telefonoParameter, faxParameter, apellidoPaternnoParameter, apellidoMaternoParameter, nombreNaturalParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioActualizacionParameter, fechaActualizacionParameter, activoParameter);
        }
    
        public virtual int USP_LIMPIAR_CUENTAS_ASOC(Nullable<int> aSOCIACIONID)
        {
            var aSOCIACIONIDParameter = aSOCIACIONID.HasValue ?
                new ObjectParameter("ASOCIACIONID", aSOCIACIONID) :
                new ObjectParameter("ASOCIACIONID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_LIMPIAR_CUENTAS_ASOC", aSOCIACIONIDParameter);
        }
    
        public virtual int USP_LIMPIARAFILIACION()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_LIMPIARAFILIACION");
        }
    
        public virtual ObjectResult<string> USP_LIST_CTAS_BANCO(Nullable<int> bancoID)
        {
            var bancoIDParameter = bancoID.HasValue ?
                new ObjectParameter("BancoID", bancoID) :
                new ObjectParameter("BancoID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("USP_LIST_CTAS_BANCO", bancoIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_LIST_Cuenta_BANCO(Nullable<int> bancoID)
        {
            var bancoIDParameter = bancoID.HasValue ?
                new ObjectParameter("BancoID", bancoID) :
                new ObjectParameter("BancoID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_LIST_Cuenta_BANCO", bancoIDParameter);
        }
    
        public virtual ObjectResult<USP_LIST_DET_BBVA_CARGA_Result> USP_LIST_DET_BBVA_CARGA(Nullable<int> bANCOID, Nullable<int> mONEDAID, string rUC, Nullable<int> recaudadorID)
        {
            var bANCOIDParameter = bANCOID.HasValue ?
                new ObjectParameter("BANCOID", bANCOID) :
                new ObjectParameter("BANCOID", typeof(int));
    
            var mONEDAIDParameter = mONEDAID.HasValue ?
                new ObjectParameter("MONEDAID", mONEDAID) :
                new ObjectParameter("MONEDAID", typeof(int));
    
            var rUCParameter = rUC != null ?
                new ObjectParameter("RUC", rUC) :
                new ObjectParameter("RUC", typeof(string));
    
            var recaudadorIDParameter = recaudadorID.HasValue ?
                new ObjectParameter("RecaudadorID", recaudadorID) :
                new ObjectParameter("RecaudadorID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LIST_DET_BBVA_CARGA_Result>("USP_LIST_DET_BBVA_CARGA", bANCOIDParameter, mONEDAIDParameter, rUCParameter, recaudadorIDParameter);
        }
    
        public virtual ObjectResult<USP_LIST_DET_INTERBANK_CARGA_Result> USP_LIST_DET_INTERBANK_CARGA(Nullable<int> bancoID, Nullable<int> mONEDAID, string cUENTA, Nullable<int> recaudadorID)
        {
            var bancoIDParameter = bancoID.HasValue ?
                new ObjectParameter("BancoID", bancoID) :
                new ObjectParameter("BancoID", typeof(int));
    
            var mONEDAIDParameter = mONEDAID.HasValue ?
                new ObjectParameter("MONEDAID", mONEDAID) :
                new ObjectParameter("MONEDAID", typeof(int));
    
            var cUENTAParameter = cUENTA != null ?
                new ObjectParameter("CUENTA", cUENTA) :
                new ObjectParameter("CUENTA", typeof(string));
    
            var recaudadorIDParameter = recaudadorID.HasValue ?
                new ObjectParameter("RecaudadorID", recaudadorID) :
                new ObjectParameter("RecaudadorID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LIST_DET_INTERBANK_CARGA_Result>("USP_LIST_DET_INTERBANK_CARGA", bancoIDParameter, mONEDAIDParameter, cUENTAParameter, recaudadorIDParameter);
        }
    
        public virtual ObjectResult<USP_LIST_DET_SCOTIANK_CARGA_Result> USP_LIST_DET_SCOTIANK_CARGA(Nullable<int> bancoID, Nullable<int> mONEDAID, string cUENTA, Nullable<int> recaudadorID)
        {
            var bancoIDParameter = bancoID.HasValue ?
                new ObjectParameter("BancoID", bancoID) :
                new ObjectParameter("BancoID", typeof(int));
    
            var mONEDAIDParameter = mONEDAID.HasValue ?
                new ObjectParameter("MONEDAID", mONEDAID) :
                new ObjectParameter("MONEDAID", typeof(int));
    
            var cUENTAParameter = cUENTA != null ?
                new ObjectParameter("CUENTA", cUENTA) :
                new ObjectParameter("CUENTA", typeof(string));
    
            var recaudadorIDParameter = recaudadorID.HasValue ?
                new ObjectParameter("RecaudadorID", recaudadorID) :
                new ObjectParameter("RecaudadorID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LIST_DET_SCOTIANK_CARGA_Result>("USP_LIST_DET_SCOTIANK_CARGA", bancoIDParameter, mONEDAIDParameter, cUENTAParameter, recaudadorIDParameter);
        }
    
        public virtual ObjectResult<USP_LIST_DET_SCOTIANK_CARGA3_Result> USP_LIST_DET_SCOTIANK_CARGA3(Nullable<int> bancoID, Nullable<int> mONEDAID)
        {
            var bancoIDParameter = bancoID.HasValue ?
                new ObjectParameter("BancoID", bancoID) :
                new ObjectParameter("BancoID", typeof(int));
    
            var mONEDAIDParameter = mONEDAID.HasValue ?
                new ObjectParameter("MONEDAID", mONEDAID) :
                new ObjectParameter("MONEDAID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LIST_DET_SCOTIANK_CARGA3_Result>("USP_LIST_DET_SCOTIANK_CARGA3", bancoIDParameter, mONEDAIDParameter);
        }
    
        public virtual ObjectResult<USP_LIST_PARAM_BANCO_Result> USP_LIST_PARAM_BANCO(Nullable<int> bANCOID, Nullable<int> bancoParametroTipoID)
        {
            var bANCOIDParameter = bANCOID.HasValue ?
                new ObjectParameter("BANCOID", bANCOID) :
                new ObjectParameter("BANCOID", typeof(int));
    
            var bancoParametroTipoIDParameter = bancoParametroTipoID.HasValue ?
                new ObjectParameter("BancoParametroTipoID", bancoParametroTipoID) :
                new ObjectParameter("BancoParametroTipoID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LIST_PARAM_BANCO_Result>("USP_LIST_PARAM_BANCO", bANCOIDParameter, bancoParametroTipoIDParameter);
        }
    
        public virtual ObjectResult<USP_LIST_PARAM_BANCO_CFG_Result> USP_LIST_PARAM_BANCO_CFG(Nullable<int> bANCOID, Nullable<int> bancoParametroTipoID)
        {
            var bANCOIDParameter = bANCOID.HasValue ?
                new ObjectParameter("BANCOID", bANCOID) :
                new ObjectParameter("BANCOID", typeof(int));
    
            var bancoParametroTipoIDParameter = bancoParametroTipoID.HasValue ?
                new ObjectParameter("BancoParametroTipoID", bancoParametroTipoID) :
                new ObjectParameter("BancoParametroTipoID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LIST_PARAM_BANCO_CFG_Result>("USP_LIST_PARAM_BANCO_CFG", bANCOIDParameter, bancoParametroTipoIDParameter);
        }
    
        public virtual ObjectResult<USP_LISTADO_DE_BANCOS_Result> USP_LISTADO_DE_BANCOS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LISTADO_DE_BANCOS_Result>("USP_LISTADO_DE_BANCOS");
        }
    
        public virtual ObjectResult<USP_Listar_AFILIACION_ACCIDENTES_Result> USP_Listar_AFILIACION_ACCIDENTES()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_Listar_AFILIACION_ACCIDENTES_Result>("USP_Listar_AFILIACION_ACCIDENTES");
        }
    
        public virtual ObjectResult<USP_LISTAR_AFILIACION_NOMBRE_Result> USP_LISTAR_AFILIACION_NOMBRE(string nOMBRE, string usuario)
        {
            var nOMBREParameter = nOMBRE != null ?
                new ObjectParameter("NOMBRE", nOMBRE) :
                new ObjectParameter("NOMBRE", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LISTAR_AFILIACION_NOMBRE_Result>("USP_LISTAR_AFILIACION_NOMBRE", nOMBREParameter, usuarioParameter);
        }
    
        public virtual ObjectResult<USP_LISTAR_AFILIACION_NOMBREx_Result> USP_LISTAR_AFILIACION_NOMBREx(string nOMBRE, string usuario)
        {
            var nOMBREParameter = nOMBRE != null ?
                new ObjectParameter("NOMBRE", nOMBRE) :
                new ObjectParameter("NOMBRE", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LISTAR_AFILIACION_NOMBREx_Result>("USP_LISTAR_AFILIACION_NOMBREx", nOMBREParameter, usuarioParameter);
        }
    
        public virtual ObjectResult<USP_LISTAR_CHARS_SPECIALS_Result> USP_LISTAR_CHARS_SPECIALS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LISTAR_CHARS_SPECIALS_Result>("USP_LISTAR_CHARS_SPECIALS");
        }
    
        public virtual ObjectResult<USP_LISTAR_IE_RES_Result> USP_LISTAR_IE_RES(Nullable<int> tIPOIE)
        {
            var tIPOIEParameter = tIPOIE.HasValue ?
                new ObjectParameter("TIPOIE", tIPOIE) :
                new ObjectParameter("TIPOIE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LISTAR_IE_RES_Result>("USP_LISTAR_IE_RES", tIPOIEParameter);
        }
    
        public virtual ObjectResult<USP_LISTARAFILIACION_Result> USP_LISTARAFILIACION()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LISTARAFILIACION_Result>("USP_LISTARAFILIACION");
        }
    
        public virtual ObjectResult<USP_LISTARAFILIACION_ACCIDENTES_Result> USP_LISTARAFILIACION_ACCIDENTES()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LISTARAFILIACION_ACCIDENTES_Result>("USP_LISTARAFILIACION_ACCIDENTES");
        }
    
        public virtual ObjectResult<USP_LISTARAFILIACION_ASOCIA2_Result> USP_LISTARAFILIACION_ASOCIA2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LISTARAFILIACION_ASOCIA2_Result>("USP_LISTARAFILIACION_ASOCIA2");
        }
    
        public virtual ObjectResult<USP_LISTARASOCIACIONES_Result> USP_LISTARASOCIACIONES()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LISTARASOCIACIONES_Result>("USP_LISTARASOCIACIONES");
        }
    
        public virtual ObjectResult<USP_LISTARASOCIACIONES3_Result> USP_LISTARASOCIACIONES3()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LISTARASOCIACIONES3_Result>("USP_LISTARASOCIACIONES3");
        }
    
        public virtual ObjectResult<USP_LISTARBANCO_Result> USP_LISTARBANCO(Nullable<int> iDCUENTA)
        {
            var iDCUENTAParameter = iDCUENTA.HasValue ?
                new ObjectParameter("IDCUENTA", iDCUENTA) :
                new ObjectParameter("IDCUENTA", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LISTARBANCO_Result>("USP_LISTARBANCO", iDCUENTAParameter);
        }
    
        public virtual ObjectResult<USP_LISTARBANCOS_Result> USP_LISTARBANCOS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LISTARBANCOS_Result>("USP_LISTARBANCOS");
        }
    
        public virtual ObjectResult<USP_LISTARBANCOSXNOMBRE_Result> USP_LISTARBANCOSXNOMBRE(string searchText)
        {
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LISTARBANCOSXNOMBRE_Result>("USP_LISTARBANCOSXNOMBRE", searchTextParameter);
        }
    
        public virtual ObjectResult<USP_LISTARCAMPAÑAS_Result> USP_LISTARCAMPAÑAS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LISTARCAMPAÑAS_Result>("USP_LISTARCAMPAÑAS");
        }
    
        public virtual ObjectResult<USP_LISTARCAMPAÑAS_NOMBRE_Result> USP_LISTARCAMPAÑAS_NOMBRE(string nOMBRE)
        {
            var nOMBREParameter = nOMBRE != null ?
                new ObjectParameter("NOMBRE", nOMBRE) :
                new ObjectParameter("NOMBRE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LISTARCAMPAÑAS_NOMBRE_Result>("USP_LISTARCAMPAÑAS_NOMBRE", nOMBREParameter);
        }
    
        public virtual ObjectResult<USP_LISTARCIASEGURO_Result> USP_LISTARCIASEGURO()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LISTARCIASEGURO_Result>("USP_LISTARCIASEGURO");
        }
    
        public virtual ObjectResult<USP_LISTARCIASEGUROXNOMBRE_Result> USP_LISTARCIASEGUROXNOMBRE(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LISTARCIASEGUROXNOMBRE_Result>("USP_LISTARCIASEGUROXNOMBRE", nombreParameter);
        }
    
        public virtual ObjectResult<USP_LISTARCODIGOS_AFILIADOS_Result> USP_LISTARCODIGOS_AFILIADOS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LISTARCODIGOS_AFILIADOS_Result>("USP_LISTARCODIGOS_AFILIADOS");
        }
    
        public virtual ObjectResult<USP_LISTARCODIGOS_DET_Result> USP_LISTARCODIGOS_DET(Nullable<int> id, Nullable<int> productID, string buscar)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("productID", productID) :
                new ObjectParameter("productID", typeof(int));
    
            var buscarParameter = buscar != null ?
                new ObjectParameter("Buscar", buscar) :
                new ObjectParameter("Buscar", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LISTARCODIGOS_DET_Result>("USP_LISTARCODIGOS_DET", idParameter, productIDParameter, buscarParameter);
        }
    
        public virtual ObjectResult<USP_LISTARCONTACTOS_BANCO_Result> USP_LISTARCONTACTOS_BANCO(Nullable<int> iDBANCO)
        {
            var iDBANCOParameter = iDBANCO.HasValue ?
                new ObjectParameter("IDBANCO", iDBANCO) :
                new ObjectParameter("IDBANCO", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LISTARCONTACTOS_BANCO_Result>("USP_LISTARCONTACTOS_BANCO", iDBANCOParameter);
        }
    
        public virtual ObjectResult<USP_LISTARCONTACTOS_INST_Result> USP_LISTARCONTACTOS_INST(Nullable<int> iDINSTITUCION)
        {
            var iDINSTITUCIONParameter = iDINSTITUCION.HasValue ?
                new ObjectParameter("IDINSTITUCION", iDINSTITUCION) :
                new ObjectParameter("IDINSTITUCION", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LISTARCONTACTOS_INST_Result>("USP_LISTARCONTACTOS_INST", iDINSTITUCIONParameter);
        }
    
        public virtual ObjectResult<USP_LISTARCTASBANCOS_Result> USP_LISTARCTASBANCOS(Nullable<int> bANCOID)
        {
            var bANCOIDParameter = bANCOID.HasValue ?
                new ObjectParameter("BANCOID", bANCOID) :
                new ObjectParameter("BANCOID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LISTARCTASBANCOS_Result>("USP_LISTARCTASBANCOS", bANCOIDParameter);
        }
    
        public virtual ObjectResult<USP_LISTARCUENTAS_Result> USP_LISTARCUENTAS(Nullable<int> iDCUENTA)
        {
            var iDCUENTAParameter = iDCUENTA.HasValue ?
                new ObjectParameter("IDCUENTA", iDCUENTA) :
                new ObjectParameter("IDCUENTA", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LISTARCUENTAS_Result>("USP_LISTARCUENTAS", iDCUENTAParameter);
        }
    
        public virtual ObjectResult<USP_LISTARGESTIONARCAMPAÑAS_Result> USP_LISTARGESTIONARCAMPAÑAS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LISTARGESTIONARCAMPAÑAS_Result>("USP_LISTARGESTIONARCAMPAÑAS");
        }
    
        public virtual ObjectResult<USP_LISTARINSTITUCIONEDUCATIVA_Result> USP_LISTARINSTITUCIONEDUCATIVA()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LISTARINSTITUCIONEDUCATIVA_Result>("USP_LISTARINSTITUCIONEDUCATIVA");
        }
    
        public virtual ObjectResult<USP_LISTARINSTITUCIONES_Result> USP_LISTARINSTITUCIONES(Nullable<int> tipInstEduID)
        {
            var tipInstEduIDParameter = tipInstEduID.HasValue ?
                new ObjectParameter("TipInstEduID", tipInstEduID) :
                new ObjectParameter("TipInstEduID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LISTARINSTITUCIONES_Result>("USP_LISTARINSTITUCIONES", tipInstEduIDParameter);
        }
    
        public virtual ObjectResult<USP_LISTARINSTITUCIONES_NOMBRE_Result> USP_LISTARINSTITUCIONES_NOMBRE(string nOMBRE)
        {
            var nOMBREParameter = nOMBRE != null ?
                new ObjectParameter("NOMBRE", nOMBRE) :
                new ObjectParameter("NOMBRE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LISTARINSTITUCIONES_NOMBRE_Result>("USP_LISTARINSTITUCIONES_NOMBRE", nOMBREParameter);
        }
    
        public virtual ObjectResult<USP_LISTARINSTITUCIONESPORUSUARIO_Result> USP_LISTARINSTITUCIONESPORUSUARIO(string usuario)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LISTARINSTITUCIONESPORUSUARIO_Result>("USP_LISTARINSTITUCIONESPORUSUARIO", usuarioParameter);
        }
    
        public virtual ObjectResult<USP_LISTARINSTITUCIONESXNOMBRE_Result> USP_LISTARINSTITUCIONESXNOMBRE(string nOMBRE, Nullable<int> tipInstEduID)
        {
            var nOMBREParameter = nOMBRE != null ?
                new ObjectParameter("NOMBRE", nOMBRE) :
                new ObjectParameter("NOMBRE", typeof(string));
    
            var tipInstEduIDParameter = tipInstEduID.HasValue ?
                new ObjectParameter("TipInstEduID", tipInstEduID) :
                new ObjectParameter("TipInstEduID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LISTARINSTITUCIONESXNOMBRE_Result>("USP_LISTARINSTITUCIONESXNOMBRE", nOMBREParameter, tipInstEduIDParameter);
        }
    
        public virtual ObjectResult<USP_LISTARMONEDA_Result> USP_LISTARMONEDA()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LISTARMONEDA_Result>("USP_LISTARMONEDA");
        }
    
        public virtual ObjectResult<USP_ListarSegurosxInstitucion_Result> USP_ListarSegurosxInstitucion(Nullable<int> institucionId)
        {
            var institucionIdParameter = institucionId.HasValue ?
                new ObjectParameter("institucionId", institucionId) :
                new ObjectParameter("institucionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ListarSegurosxInstitucion_Result>("USP_ListarSegurosxInstitucion", institucionIdParameter);
        }
    
        public virtual ObjectResult<USP_LISTARUBIGEO_Result> USP_LISTARUBIGEO(string dEPARTAMENTO, string pROVINCIA, string dISTRITO)
        {
            var dEPARTAMENTOParameter = dEPARTAMENTO != null ?
                new ObjectParameter("DEPARTAMENTO", dEPARTAMENTO) :
                new ObjectParameter("DEPARTAMENTO", typeof(string));
    
            var pROVINCIAParameter = pROVINCIA != null ?
                new ObjectParameter("PROVINCIA", pROVINCIA) :
                new ObjectParameter("PROVINCIA", typeof(string));
    
            var dISTRITOParameter = dISTRITO != null ?
                new ObjectParameter("DISTRITO", dISTRITO) :
                new ObjectParameter("DISTRITO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LISTARUBIGEO_Result>("USP_LISTARUBIGEO", dEPARTAMENTOParameter, pROVINCIAParameter, dISTRITOParameter);
        }
    
        public virtual ObjectResult<USP_LISTARUSERS_Result> USP_LISTARUSERS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LISTARUSERS_Result>("USP_LISTARUSERS");
        }
    
        public virtual ObjectResult<USP_LISTARUSERSXNOMBRE_Result> USP_LISTARUSERSXNOMBRE(string nOMBRE)
        {
            var nOMBREParameter = nOMBRE != null ?
                new ObjectParameter("NOMBRE", nOMBRE) :
                new ObjectParameter("NOMBRE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LISTARUSERSXNOMBRE_Result>("USP_LISTARUSERSXNOMBRE", nOMBREParameter);
        }
    
        public virtual ObjectResult<USP_LISTARUSUARIOS_Result> USP_LISTARUSUARIOS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LISTARUSUARIOS_Result>("USP_LISTARUSUARIOS");
        }
    
        public virtual ObjectResult<USP_LISTATIPOSEGURO_Result> USP_LISTATIPOSEGURO(Nullable<int> cODIGO)
        {
            var cODIGOParameter = cODIGO.HasValue ?
                new ObjectParameter("CODIGO", cODIGO) :
                new ObjectParameter("CODIGO", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LISTATIPOSEGURO_Result>("USP_LISTATIPOSEGURO", cODIGOParameter);
        }
    
        public virtual ObjectResult<USP_LISTATIPOSEGUROS_Result> USP_LISTATIPOSEGUROS(Nullable<int> cODIGO)
        {
            var cODIGOParameter = cODIGO.HasValue ?
                new ObjectParameter("CODIGO", cODIGO) :
                new ObjectParameter("CODIGO", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LISTATIPOSEGUROS_Result>("USP_LISTATIPOSEGUROS", cODIGOParameter);
        }
    
        public virtual int USP_MailAdjuntoInsert(Nullable<int> iD, Nullable<int> mailID, string path)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var mailIDParameter = mailID.HasValue ?
                new ObjectParameter("MailID", mailID) :
                new ObjectParameter("MailID", typeof(int));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_MailAdjuntoInsert", iDParameter, mailIDParameter, pathParameter);
        }
    
        public virtual int USP_MailInsert(Nullable<int> iD, string destinatarios, string destinatariosCopia, string asunto, string cuerpo, Nullable<bool> enviando, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var destinatariosParameter = destinatarios != null ?
                new ObjectParameter("Destinatarios", destinatarios) :
                new ObjectParameter("Destinatarios", typeof(string));
    
            var destinatariosCopiaParameter = destinatariosCopia != null ?
                new ObjectParameter("DestinatariosCopia", destinatariosCopia) :
                new ObjectParameter("DestinatariosCopia", typeof(string));
    
            var asuntoParameter = asunto != null ?
                new ObjectParameter("Asunto", asunto) :
                new ObjectParameter("Asunto", typeof(string));
    
            var cuerpoParameter = cuerpo != null ?
                new ObjectParameter("Cuerpo", cuerpo) :
                new ObjectParameter("Cuerpo", typeof(string));
    
            var enviandoParameter = enviando.HasValue ?
                new ObjectParameter("Enviando", enviando) :
                new ObjectParameter("Enviando", typeof(bool));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_MailInsert", iDParameter, destinatariosParameter, destinatariosCopiaParameter, asuntoParameter, cuerpoParameter, enviandoParameter, usuarioCreacionParameter, fechaCreacionParameter);
        }
    
        public virtual int USP_MonedaInsert(Nullable<int> iD, string nombre, string simbolo, Nullable<bool> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioActualizacion, Nullable<System.DateTime> fechaActualizacion)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var simboloParameter = simbolo != null ?
                new ObjectParameter("Simbolo", simbolo) :
                new ObjectParameter("Simbolo", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioActualizacionParameter = usuarioActualizacion != null ?
                new ObjectParameter("UsuarioActualizacion", usuarioActualizacion) :
                new ObjectParameter("UsuarioActualizacion", typeof(string));
    
            var fechaActualizacionParameter = fechaActualizacion.HasValue ?
                new ObjectParameter("FechaActualizacion", fechaActualizacion) :
                new ObjectParameter("FechaActualizacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_MonedaInsert", iDParameter, nombreParameter, simboloParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioActualizacionParameter, fechaActualizacionParameter);
        }
    
        public virtual ObjectResult<USP_OBT_ALUM_ASEGURADO_Result> USP_OBT_ALUM_ASEGURADO(Nullable<int> institucionEducativaID, Nullable<int> productoID, Nullable<int> cIASeguroID, Nullable<int> asociacionID)
        {
            var institucionEducativaIDParameter = institucionEducativaID.HasValue ?
                new ObjectParameter("InstitucionEducativaID", institucionEducativaID) :
                new ObjectParameter("InstitucionEducativaID", typeof(int));
    
            var productoIDParameter = productoID.HasValue ?
                new ObjectParameter("ProductoID", productoID) :
                new ObjectParameter("ProductoID", typeof(int));
    
            var cIASeguroIDParameter = cIASeguroID.HasValue ?
                new ObjectParameter("CIASeguroID", cIASeguroID) :
                new ObjectParameter("CIASeguroID", typeof(int));
    
            var asociacionIDParameter = asociacionID.HasValue ?
                new ObjectParameter("AsociacionID", asociacionID) :
                new ObjectParameter("AsociacionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_OBT_ALUM_ASEGURADO_Result>("USP_OBT_ALUM_ASEGURADO", institucionEducativaIDParameter, productoIDParameter, cIASeguroIDParameter, asociacionIDParameter);
        }
    
        public virtual ObjectResult<USP_OBT_ALUMNOS_ASEGURADOS_Result> USP_OBT_ALUMNOS_ASEGURADOS(Nullable<int> institucionEducativaID, Nullable<int> productoID, Nullable<int> cIASeguroID, Nullable<int> asociacionID)
        {
            var institucionEducativaIDParameter = institucionEducativaID.HasValue ?
                new ObjectParameter("InstitucionEducativaID", institucionEducativaID) :
                new ObjectParameter("InstitucionEducativaID", typeof(int));
    
            var productoIDParameter = productoID.HasValue ?
                new ObjectParameter("ProductoID", productoID) :
                new ObjectParameter("ProductoID", typeof(int));
    
            var cIASeguroIDParameter = cIASeguroID.HasValue ?
                new ObjectParameter("CIASeguroID", cIASeguroID) :
                new ObjectParameter("CIASeguroID", typeof(int));
    
            var asociacionIDParameter = asociacionID.HasValue ?
                new ObjectParameter("AsociacionID", asociacionID) :
                new ObjectParameter("AsociacionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_OBT_ALUMNOS_ASEGURADOS_Result>("USP_OBT_ALUMNOS_ASEGURADOS", institucionEducativaIDParameter, productoIDParameter, cIASeguroIDParameter, asociacionIDParameter);
        }
    
        public virtual ObjectResult<USP_OBT_ALUMNOS_ASEGURADOS_NOMBRE_Result> USP_OBT_ALUMNOS_ASEGURADOS_NOMBRE(Nullable<int> institucionEducativaID, Nullable<int> productoID, Nullable<int> cIASeguroID, Nullable<int> asociacionID, string nOMBRE)
        {
            var institucionEducativaIDParameter = institucionEducativaID.HasValue ?
                new ObjectParameter("InstitucionEducativaID", institucionEducativaID) :
                new ObjectParameter("InstitucionEducativaID", typeof(int));
    
            var productoIDParameter = productoID.HasValue ?
                new ObjectParameter("ProductoID", productoID) :
                new ObjectParameter("ProductoID", typeof(int));
    
            var cIASeguroIDParameter = cIASeguroID.HasValue ?
                new ObjectParameter("CIASeguroID", cIASeguroID) :
                new ObjectParameter("CIASeguroID", typeof(int));
    
            var asociacionIDParameter = asociacionID.HasValue ?
                new ObjectParameter("AsociacionID", asociacionID) :
                new ObjectParameter("AsociacionID", typeof(int));
    
            var nOMBREParameter = nOMBRE != null ?
                new ObjectParameter("NOMBRE", nOMBRE) :
                new ObjectParameter("NOMBRE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_OBT_ALUMNOS_ASEGURADOS_NOMBRE_Result>("USP_OBT_ALUMNOS_ASEGURADOS_NOMBRE", institucionEducativaIDParameter, productoIDParameter, cIASeguroIDParameter, asociacionIDParameter, nOMBREParameter);
        }
    
        public virtual ObjectResult<USP_Obtener_AFILIACION_Result> USP_Obtener_AFILIACION(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_Obtener_AFILIACION_Result>("USP_Obtener_AFILIACION", idParameter);
        }
    
        public virtual ObjectResult<USP_Obtener_AFILIACION_ACCIDENTES_Result> USP_Obtener_AFILIACION_ACCIDENTES(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_Obtener_AFILIACION_ACCIDENTES_Result>("USP_Obtener_AFILIACION_ACCIDENTES", idParameter);
        }
    
        public virtual ObjectResult<USP_OBTENER_CAMPOS_CARGA_Result> USP_OBTENER_CAMPOS_CARGA(Nullable<int> configuracionArchivoID)
        {
            var configuracionArchivoIDParameter = configuracionArchivoID.HasValue ?
                new ObjectParameter("ConfiguracionArchivoID", configuracionArchivoID) :
                new ObjectParameter("ConfiguracionArchivoID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_OBTENER_CAMPOS_CARGA_Result>("USP_OBTENER_CAMPOS_CARGA", configuracionArchivoIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_OBTENER_CANT_CODIGOS(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_OBTENER_CANT_CODIGOS", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_OBTENER_CFG_CARGA(Nullable<int> cIASeguroID, Nullable<int> productoID, Nullable<int> configuracionArchivoTipoID)
        {
            var cIASeguroIDParameter = cIASeguroID.HasValue ?
                new ObjectParameter("CIASeguroID", cIASeguroID) :
                new ObjectParameter("CIASeguroID", typeof(int));
    
            var productoIDParameter = productoID.HasValue ?
                new ObjectParameter("ProductoID", productoID) :
                new ObjectParameter("ProductoID", typeof(int));
    
            var configuracionArchivoTipoIDParameter = configuracionArchivoTipoID.HasValue ?
                new ObjectParameter("ConfiguracionArchivoTipoID", configuracionArchivoTipoID) :
                new ObjectParameter("ConfiguracionArchivoTipoID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_OBTENER_CFG_CARGA", cIASeguroIDParameter, productoIDParameter, configuracionArchivoTipoIDParameter);
        }
    
        public virtual ObjectResult<USP_OBTENER_CODIGO_LIBRE_Result> USP_OBTENER_CODIGO_LIBRE(Nullable<int> aSOCIACIONID)
        {
            var aSOCIACIONIDParameter = aSOCIACIONID.HasValue ?
                new ObjectParameter("ASOCIACIONID", aSOCIACIONID) :
                new ObjectParameter("ASOCIACIONID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_OBTENER_CODIGO_LIBRE_Result>("USP_OBTENER_CODIGO_LIBRE", aSOCIACIONIDParameter);
        }
    
        public virtual ObjectResult<USP_OBTENER_CODIGO_LIBRE_RENTA_Result> USP_OBTENER_CODIGO_LIBRE_RENTA(Nullable<int> aSOCIACIONID)
        {
            var aSOCIACIONIDParameter = aSOCIACIONID.HasValue ?
                new ObjectParameter("ASOCIACIONID", aSOCIACIONID) :
                new ObjectParameter("ASOCIACIONID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_OBTENER_CODIGO_LIBRE_RENTA_Result>("USP_OBTENER_CODIGO_LIBRE_RENTA", aSOCIACIONIDParameter);
        }
    
        public virtual ObjectResult<USP_OBTENER_INSTITUCION_PAGOS_EMAIL_Result> USP_OBTENER_INSTITUCION_PAGOS_EMAIL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_OBTENER_INSTITUCION_PAGOS_EMAIL_Result>("USP_OBTENER_INSTITUCION_PAGOS_EMAIL");
        }
    
        public virtual ObjectResult<USP_OBTENER_INSTITUCION_PAGOS_EMAIL1_Result> USP_OBTENER_INSTITUCION_PAGOS_EMAIL1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_OBTENER_INSTITUCION_PAGOS_EMAIL1_Result>("USP_OBTENER_INSTITUCION_PAGOS_EMAIL1");
        }
    
        public virtual ObjectResult<USP_OBTENER_PAGOS_AFILIADOS_Result> USP_OBTENER_PAGOS_AFILIADOS(string uSUARIO, Nullable<int> iD)
        {
            var uSUARIOParameter = uSUARIO != null ?
                new ObjectParameter("USUARIO", uSUARIO) :
                new ObjectParameter("USUARIO", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_OBTENER_PAGOS_AFILIADOS_Result>("USP_OBTENER_PAGOS_AFILIADOS", uSUARIOParameter, iDParameter);
        }
    
        public virtual ObjectResult<byte[]> USP_OBTENER_Plan_Asociacion(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<byte[]>("USP_OBTENER_Plan_Asociacion", iDParameter);
        }
    
        public virtual ObjectResult<USP_OBTENER_PRODUCTOS_IE_Result> USP_OBTENER_PRODUCTOS_IE(Nullable<int> iE)
        {
            var iEParameter = iE.HasValue ?
                new ObjectParameter("IE", iE) :
                new ObjectParameter("IE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_OBTENER_PRODUCTOS_IE_Result>("USP_OBTENER_PRODUCTOS_IE", iEParameter);
        }
    
        public virtual ObjectResult<string> USP_ObtenerBancosAsociacion(Nullable<int> asociacionId)
        {
            var asociacionIdParameter = asociacionId.HasValue ?
                new ObjectParameter("AsociacionId", asociacionId) :
                new ObjectParameter("AsociacionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("USP_ObtenerBancosAsociacion", asociacionIdParameter);
        }
    
        public virtual ObjectResult<USP_ObtenerBancosIdAsociacion_Result> USP_ObtenerBancosIdAsociacion(Nullable<int> asociacionId)
        {
            var asociacionIdParameter = asociacionId.HasValue ?
                new ObjectParameter("AsociacionId", asociacionId) :
                new ObjectParameter("AsociacionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ObtenerBancosIdAsociacion_Result>("USP_ObtenerBancosIdAsociacion", asociacionIdParameter);
        }
    
        public virtual ObjectResult<USP_ObtenerConfiguracionArchivo_Result> USP_ObtenerConfiguracionArchivo(Nullable<int> tipo)
        {
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ObtenerConfiguracionArchivo_Result>("USP_ObtenerConfiguracionArchivo", tipoParameter);
        }
    
        public virtual ObjectResult<byte[]> USP_OBTENERIMAGEN(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<byte[]>("USP_OBTENERIMAGEN", iDParameter);
        }
    
        public virtual int USP_PadreInsert(Nullable<int> iD, string apellidoPaterno, string apellidoMaterno, string nombre, Nullable<int> tipoDocumentoID, string numeroDocumento, Nullable<System.DateTime> fechaNacimiento, Nullable<int> beneficiarioID, Nullable<int> tipoPadreID, Nullable<bool> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioActualizacion, Nullable<System.DateTime> fechaActualizacion)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var tipoDocumentoIDParameter = tipoDocumentoID.HasValue ?
                new ObjectParameter("TipoDocumentoID", tipoDocumentoID) :
                new ObjectParameter("TipoDocumentoID", typeof(int));
    
            var numeroDocumentoParameter = numeroDocumento != null ?
                new ObjectParameter("NumeroDocumento", numeroDocumento) :
                new ObjectParameter("NumeroDocumento", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var beneficiarioIDParameter = beneficiarioID.HasValue ?
                new ObjectParameter("BeneficiarioID", beneficiarioID) :
                new ObjectParameter("BeneficiarioID", typeof(int));
    
            var tipoPadreIDParameter = tipoPadreID.HasValue ?
                new ObjectParameter("TipoPadreID", tipoPadreID) :
                new ObjectParameter("TipoPadreID", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioActualizacionParameter = usuarioActualizacion != null ?
                new ObjectParameter("UsuarioActualizacion", usuarioActualizacion) :
                new ObjectParameter("UsuarioActualizacion", typeof(string));
    
            var fechaActualizacionParameter = fechaActualizacion.HasValue ?
                new ObjectParameter("FechaActualizacion", fechaActualizacion) :
                new ObjectParameter("FechaActualizacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_PadreInsert", iDParameter, apellidoPaternoParameter, apellidoMaternoParameter, nombreParameter, tipoDocumentoIDParameter, numeroDocumentoParameter, fechaNacimientoParameter, beneficiarioIDParameter, tipoPadreIDParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioActualizacionParameter, fechaActualizacionParameter);
        }
    
        public virtual ObjectResult<USP_PARAM_BANCOS_Result> USP_PARAM_BANCOS(Nullable<int> bANCOID, Nullable<int> mONEDAID)
        {
            var bANCOIDParameter = bANCOID.HasValue ?
                new ObjectParameter("BANCOID", bANCOID) :
                new ObjectParameter("BANCOID", typeof(int));
    
            var mONEDAIDParameter = mONEDAID.HasValue ?
                new ObjectParameter("MONEDAID", mONEDAID) :
                new ObjectParameter("MONEDAID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PARAM_BANCOS_Result>("USP_PARAM_BANCOS", bANCOIDParameter, mONEDAIDParameter);
        }
    
        public virtual int USP_ParametrosDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_ParametrosDelete", idParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> USP_ParametrosInsert(string categoria, string nombre, string valor, string descripcion)
        {
            var categoriaParameter = categoria != null ?
                new ObjectParameter("Categoria", categoria) :
                new ObjectParameter("Categoria", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var valorParameter = valor != null ?
                new ObjectParameter("Valor", valor) :
                new ObjectParameter("Valor", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("USP_ParametrosInsert", categoriaParameter, nombreParameter, valorParameter, descripcionParameter);
        }
    
        public virtual ObjectResult<USP_ParametrosSelect_Result> USP_ParametrosSelect(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ParametrosSelect_Result>("USP_ParametrosSelect", idParameter);
        }
    
        public virtual ObjectResult<USP_ParametrosSelectAll_Result> USP_ParametrosSelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ParametrosSelectAll_Result>("USP_ParametrosSelectAll");
        }
    
        public virtual int USP_ParametrosUpdate(Nullable<int> id, string categoria, string nombre, string valor, string descripcion)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var categoriaParameter = categoria != null ?
                new ObjectParameter("Categoria", categoria) :
                new ObjectParameter("Categoria", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var valorParameter = valor != null ?
                new ObjectParameter("Valor", valor) :
                new ObjectParameter("Valor", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_ParametrosUpdate", idParameter, categoriaParameter, nombreParameter, valorParameter, descripcionParameter);
        }
    
        public virtual int USP_ProductoInsert(Nullable<int> iD, string codigo, string nombre, string descripcion, Nullable<bool> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioActualizacion, Nullable<System.DateTime> fechaActualizacion)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioActualizacionParameter = usuarioActualizacion != null ?
                new ObjectParameter("UsuarioActualizacion", usuarioActualizacion) :
                new ObjectParameter("UsuarioActualizacion", typeof(string));
    
            var fechaActualizacionParameter = fechaActualizacion.HasValue ?
                new ObjectParameter("FechaActualizacion", fechaActualizacion) :
                new ObjectParameter("FechaActualizacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_ProductoInsert", iDParameter, codigoParameter, nombreParameter, descripcionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioActualizacionParameter, fechaActualizacionParameter);
        }
    
        public virtual ObjectResult<USP_REGISTRAAFILIACION_Result> USP_REGISTRAAFILIACION()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_REGISTRAAFILIACION_Result>("USP_REGISTRAAFILIACION");
        }
    
        public virtual int USP_REGISTRO_PAGO_CODIGO(string cODIGO, Nullable<int> bANCOID, Nullable<int> mONEDAID, string numOperacion, string fechapago)
        {
            var cODIGOParameter = cODIGO != null ?
                new ObjectParameter("CODIGO", cODIGO) :
                new ObjectParameter("CODIGO", typeof(string));
    
            var bANCOIDParameter = bANCOID.HasValue ?
                new ObjectParameter("BANCOID", bANCOID) :
                new ObjectParameter("BANCOID", typeof(int));
    
            var mONEDAIDParameter = mONEDAID.HasValue ?
                new ObjectParameter("MONEDAID", mONEDAID) :
                new ObjectParameter("MONEDAID", typeof(int));
    
            var numOperacionParameter = numOperacion != null ?
                new ObjectParameter("numOperacion", numOperacion) :
                new ObjectParameter("numOperacion", typeof(string));
    
            var fechapagoParameter = fechapago != null ?
                new ObjectParameter("fechapago", fechapago) :
                new ObjectParameter("fechapago", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_REGISTRO_PAGO_CODIGO", cODIGOParameter, bANCOIDParameter, mONEDAIDParameter, numOperacionParameter, fechapagoParameter);
        }
    
        public virtual ObjectResult<usp_Reporte_ReciboAfiliados_Result> usp_Reporte_ReciboAfiliados(string usuarioCreacion, string codigoPago)
        {
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var codigoPagoParameter = codigoPago != null ?
                new ObjectParameter("codigoPago", codigoPago) :
                new ObjectParameter("codigoPago", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Reporte_ReciboAfiliados_Result>("usp_Reporte_ReciboAfiliados", usuarioCreacionParameter, codigoPagoParameter);
        }
    
        public virtual ObjectResult<usp_ReporteEnvioCorreos_ReciboAfiliados_Result> usp_ReporteEnvioCorreos_ReciboAfiliados(string codigo, string usuarioCreacion, string codigoPago, Nullable<int> idProducto)
        {
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var codigoPagoParameter = codigoPago != null ?
                new ObjectParameter("CodigoPago", codigoPago) :
                new ObjectParameter("CodigoPago", typeof(string));
    
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ReporteEnvioCorreos_ReciboAfiliados_Result>("usp_ReporteEnvioCorreos_ReciboAfiliados", codigoParameter, usuarioCreacionParameter, codigoPagoParameter, idProductoParameter);
        }
    
        public virtual int USP_RolesInsert(string id, string name)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_RolesInsert", idParameter, nameParameter);
        }
    
        public virtual ObjectResult<Usp_Sel_CodigoDetalle_Pagos_Result> Usp_Sel_CodigoDetalle_Pagos(Nullable<int> institucionEducativaId, Nullable<int> productoId, Nullable<int> cIASeguroID, Nullable<bool> isPagado, Nullable<int> bancoID, Nullable<int> monedaID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string textoBusqueda, Nullable<bool> filtrarFechaVigencia)
        {
            var institucionEducativaIdParameter = institucionEducativaId.HasValue ?
                new ObjectParameter("InstitucionEducativaId", institucionEducativaId) :
                new ObjectParameter("InstitucionEducativaId", typeof(int));
    
            var productoIdParameter = productoId.HasValue ?
                new ObjectParameter("ProductoId", productoId) :
                new ObjectParameter("ProductoId", typeof(int));
    
            var cIASeguroIDParameter = cIASeguroID.HasValue ?
                new ObjectParameter("CIASeguroID", cIASeguroID) :
                new ObjectParameter("CIASeguroID", typeof(int));
    
            var isPagadoParameter = isPagado.HasValue ?
                new ObjectParameter("IsPagado", isPagado) :
                new ObjectParameter("IsPagado", typeof(bool));
    
            var bancoIDParameter = bancoID.HasValue ?
                new ObjectParameter("BancoID", bancoID) :
                new ObjectParameter("BancoID", typeof(int));
    
            var monedaIDParameter = monedaID.HasValue ?
                new ObjectParameter("MonedaID", monedaID) :
                new ObjectParameter("MonedaID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var textoBusquedaParameter = textoBusqueda != null ?
                new ObjectParameter("TextoBusqueda", textoBusqueda) :
                new ObjectParameter("TextoBusqueda", typeof(string));
    
            var filtrarFechaVigenciaParameter = filtrarFechaVigencia.HasValue ?
                new ObjectParameter("FiltrarFechaVigencia", filtrarFechaVigencia) :
                new ObjectParameter("FiltrarFechaVigencia", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_Sel_CodigoDetalle_Pagos_Result>("Usp_Sel_CodigoDetalle_Pagos", institucionEducativaIdParameter, productoIdParameter, cIASeguroIDParameter, isPagadoParameter, bancoIDParameter, monedaIDParameter, startDateParameter, endDateParameter, textoBusquedaParameter, filtrarFechaVigenciaParameter);
        }
    
        public virtual ObjectResult<Usp_Sel_Reporte_CodigoDetalle_Pagos_Result> Usp_Sel_Reporte_CodigoDetalle_Pagos(Nullable<int> institucionEducativaId, Nullable<int> productoId, Nullable<int> cIASeguroID, Nullable<bool> isPagado, Nullable<int> bancoID, Nullable<int> monedaID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string textoBusqueda, Nullable<bool> filtrarFechaVigencia)
        {
            var institucionEducativaIdParameter = institucionEducativaId.HasValue ?
                new ObjectParameter("InstitucionEducativaId", institucionEducativaId) :
                new ObjectParameter("InstitucionEducativaId", typeof(int));
    
            var productoIdParameter = productoId.HasValue ?
                new ObjectParameter("ProductoId", productoId) :
                new ObjectParameter("ProductoId", typeof(int));
    
            var cIASeguroIDParameter = cIASeguroID.HasValue ?
                new ObjectParameter("CIASeguroID", cIASeguroID) :
                new ObjectParameter("CIASeguroID", typeof(int));
    
            var isPagadoParameter = isPagado.HasValue ?
                new ObjectParameter("IsPagado", isPagado) :
                new ObjectParameter("IsPagado", typeof(bool));
    
            var bancoIDParameter = bancoID.HasValue ?
                new ObjectParameter("BancoID", bancoID) :
                new ObjectParameter("BancoID", typeof(int));
    
            var monedaIDParameter = monedaID.HasValue ?
                new ObjectParameter("MonedaID", monedaID) :
                new ObjectParameter("MonedaID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var textoBusquedaParameter = textoBusqueda != null ?
                new ObjectParameter("TextoBusqueda", textoBusqueda) :
                new ObjectParameter("TextoBusqueda", typeof(string));
    
            var filtrarFechaVigenciaParameter = filtrarFechaVigencia.HasValue ?
                new ObjectParameter("FiltrarFechaVigencia", filtrarFechaVigencia) :
                new ObjectParameter("FiltrarFechaVigencia", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_Sel_Reporte_CodigoDetalle_Pagos_Result>("Usp_Sel_Reporte_CodigoDetalle_Pagos", institucionEducativaIdParameter, productoIdParameter, cIASeguroIDParameter, isPagadoParameter, bancoIDParameter, monedaIDParameter, startDateParameter, endDateParameter, textoBusquedaParameter, filtrarFechaVigenciaParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Usp_Sel_ValidarCierreDeInstituciones(Nullable<int> campaniaID, Nullable<int> asociacionID, Nullable<int> institucionEducativaID, Nullable<int> productoID)
        {
            var campaniaIDParameter = campaniaID.HasValue ?
                new ObjectParameter("CampaniaID", campaniaID) :
                new ObjectParameter("CampaniaID", typeof(int));
    
            var asociacionIDParameter = asociacionID.HasValue ?
                new ObjectParameter("AsociacionID", asociacionID) :
                new ObjectParameter("AsociacionID", typeof(int));
    
            var institucionEducativaIDParameter = institucionEducativaID.HasValue ?
                new ObjectParameter("InstitucionEducativaID", institucionEducativaID) :
                new ObjectParameter("InstitucionEducativaID", typeof(int));
    
            var productoIDParameter = productoID.HasValue ?
                new ObjectParameter("ProductoID", productoID) :
                new ObjectParameter("ProductoID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Usp_Sel_ValidarCierreDeInstituciones", campaniaIDParameter, asociacionIDParameter, institucionEducativaIDParameter, productoIDParameter);
        }
    
        public virtual int USP_TipoDocumentoInsert(Nullable<int> iD, string codigo, string codigoRenta, string nombre, Nullable<bool> registroUsuarioAsegurado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioActualizacion, Nullable<System.DateTime> fechaActualizacion, Nullable<bool> estado)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var codigoRentaParameter = codigoRenta != null ?
                new ObjectParameter("CodigoRenta", codigoRenta) :
                new ObjectParameter("CodigoRenta", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var registroUsuarioAseguradoParameter = registroUsuarioAsegurado.HasValue ?
                new ObjectParameter("RegistroUsuarioAsegurado", registroUsuarioAsegurado) :
                new ObjectParameter("RegistroUsuarioAsegurado", typeof(bool));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioActualizacionParameter = usuarioActualizacion != null ?
                new ObjectParameter("UsuarioActualizacion", usuarioActualizacion) :
                new ObjectParameter("UsuarioActualizacion", typeof(string));
    
            var fechaActualizacionParameter = fechaActualizacion.HasValue ?
                new ObjectParameter("FechaActualizacion", fechaActualizacion) :
                new ObjectParameter("FechaActualizacion", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_TipoDocumentoInsert", iDParameter, codigoParameter, codigoRentaParameter, nombreParameter, registroUsuarioAseguradoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioActualizacionParameter, fechaActualizacionParameter, estadoParameter);
        }
    
        public virtual int USP_TipoInstitucionEducativaInsert(Nullable<int> iD, string nombre, Nullable<bool> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioActualizacion, Nullable<System.DateTime> fechaActualizacion)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioActualizacionParameter = usuarioActualizacion != null ?
                new ObjectParameter("UsuarioActualizacion", usuarioActualizacion) :
                new ObjectParameter("UsuarioActualizacion", typeof(string));
    
            var fechaActualizacionParameter = fechaActualizacion.HasValue ?
                new ObjectParameter("FechaActualizacion", fechaActualizacion) :
                new ObjectParameter("FechaActualizacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_TipoInstitucionEducativaInsert", iDParameter, nombreParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioActualizacionParameter, fechaActualizacionParameter);
        }
    
        public virtual int USP_TipoPadreInsert(Nullable<int> iD, string nombre, Nullable<bool> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioActualizacion, Nullable<System.DateTime> fechaActualizacion)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioActualizacionParameter = usuarioActualizacion != null ?
                new ObjectParameter("UsuarioActualizacion", usuarioActualizacion) :
                new ObjectParameter("UsuarioActualizacion", typeof(string));
    
            var fechaActualizacionParameter = fechaActualizacion.HasValue ?
                new ObjectParameter("FechaActualizacion", fechaActualizacion) :
                new ObjectParameter("FechaActualizacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_TipoPadreInsert", iDParameter, nombreParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioActualizacionParameter, fechaActualizacionParameter);
        }
    
        public virtual ObjectResult<USP_TipoProductoSelectALL_Result> USP_TipoProductoSelectALL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_TipoProductoSelectALL_Result>("USP_TipoProductoSelectALL");
        }
    
        public virtual int USP_TramaInsert(Nullable<int> iD, Nullable<int> bancoID, Nullable<int> monedaID, Nullable<int> cIASeguroID, Nullable<bool> tipoGeneracion, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioActualizacion, Nullable<System.DateTime> fechaActualizacion, Nullable<bool> activo)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var bancoIDParameter = bancoID.HasValue ?
                new ObjectParameter("BancoID", bancoID) :
                new ObjectParameter("BancoID", typeof(int));
    
            var monedaIDParameter = monedaID.HasValue ?
                new ObjectParameter("MonedaID", monedaID) :
                new ObjectParameter("MonedaID", typeof(int));
    
            var cIASeguroIDParameter = cIASeguroID.HasValue ?
                new ObjectParameter("CIASeguroID", cIASeguroID) :
                new ObjectParameter("CIASeguroID", typeof(int));
    
            var tipoGeneracionParameter = tipoGeneracion.HasValue ?
                new ObjectParameter("TipoGeneracion", tipoGeneracion) :
                new ObjectParameter("TipoGeneracion", typeof(bool));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioActualizacionParameter = usuarioActualizacion != null ?
                new ObjectParameter("UsuarioActualizacion", usuarioActualizacion) :
                new ObjectParameter("UsuarioActualizacion", typeof(string));
    
            var fechaActualizacionParameter = fechaActualizacion.HasValue ?
                new ObjectParameter("FechaActualizacion", fechaActualizacion) :
                new ObjectParameter("FechaActualizacion", typeof(System.DateTime));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_TramaInsert", iDParameter, bancoIDParameter, monedaIDParameter, cIASeguroIDParameter, tipoGeneracionParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioActualizacionParameter, fechaActualizacionParameter, activoParameter);
        }
    
        public virtual int USP_UbigeoInsert(Nullable<int> iD, string codigoUbigeo, string codigoDepartamento, string codigoProvincia, string codigoDistrito, string nombre)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var codigoUbigeoParameter = codigoUbigeo != null ?
                new ObjectParameter("CodigoUbigeo", codigoUbigeo) :
                new ObjectParameter("CodigoUbigeo", typeof(string));
    
            var codigoDepartamentoParameter = codigoDepartamento != null ?
                new ObjectParameter("CodigoDepartamento", codigoDepartamento) :
                new ObjectParameter("CodigoDepartamento", typeof(string));
    
            var codigoProvinciaParameter = codigoProvincia != null ?
                new ObjectParameter("CodigoProvincia", codigoProvincia) :
                new ObjectParameter("CodigoProvincia", typeof(string));
    
            var codigoDistritoParameter = codigoDistrito != null ?
                new ObjectParameter("CodigoDistrito", codigoDistrito) :
                new ObjectParameter("CodigoDistrito", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_UbigeoInsert", iDParameter, codigoUbigeoParameter, codigoDepartamentoParameter, codigoProvinciaParameter, codigoDistritoParameter, nombreParameter);
        }
    
        public virtual int USP_UserClaimsInsert(Nullable<int> id, string userId, string claimType, string claimValue, string identityUser_Id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var claimTypeParameter = claimType != null ?
                new ObjectParameter("ClaimType", claimType) :
                new ObjectParameter("ClaimType", typeof(string));
    
            var claimValueParameter = claimValue != null ?
                new ObjectParameter("ClaimValue", claimValue) :
                new ObjectParameter("ClaimValue", typeof(string));
    
            var identityUser_IdParameter = identityUser_Id != null ?
                new ObjectParameter("IdentityUser_Id", identityUser_Id) :
                new ObjectParameter("IdentityUser_Id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_UserClaimsInsert", idParameter, userIdParameter, claimTypeParameter, claimValueParameter, identityUser_IdParameter);
        }
    
        public virtual int USP_UserLoginsInsert(string userId, string loginProvider, string providerKey, string identityUser_Id)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var loginProviderParameter = loginProvider != null ?
                new ObjectParameter("LoginProvider", loginProvider) :
                new ObjectParameter("LoginProvider", typeof(string));
    
            var providerKeyParameter = providerKey != null ?
                new ObjectParameter("ProviderKey", providerKey) :
                new ObjectParameter("ProviderKey", typeof(string));
    
            var identityUser_IdParameter = identityUser_Id != null ?
                new ObjectParameter("IdentityUser_Id", identityUser_Id) :
                new ObjectParameter("IdentityUser_Id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_UserLoginsInsert", userIdParameter, loginProviderParameter, providerKeyParameter, identityUser_IdParameter);
        }
    
        public virtual int USP_UserRolesInsert(Nullable<int> iD, string roleId, string userId, string identityRole_Id, string identityUser_Id)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var roleIdParameter = roleId != null ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var identityRole_IdParameter = identityRole_Id != null ?
                new ObjectParameter("IdentityRole_Id", identityRole_Id) :
                new ObjectParameter("IdentityRole_Id", typeof(string));
    
            var identityUser_IdParameter = identityUser_Id != null ?
                new ObjectParameter("IdentityUser_Id", identityUser_Id) :
                new ObjectParameter("IdentityUser_Id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_UserRolesInsert", iDParameter, roleIdParameter, userIdParameter, identityRole_IdParameter, identityUser_IdParameter);
        }
    
        public virtual int USP_UsersInsert(string id, string email, Nullable<bool> emailConfirmed, string passwordHash, string customPasswordHash, string securityStamp, string phoneNumber, Nullable<bool> phoneNumberConfirmed, Nullable<bool> twoFactorEnabled, Nullable<System.DateTime> lockoutEndDateUtc, Nullable<bool> lockoutEnabled, Nullable<int> accessFailedCount, string userName, string apellidoPaterno, string apellidoMaterno, string nombre, Nullable<int> tipoDocumento, string numeroDocumento, Nullable<int> colegio, string discriminator)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var emailConfirmedParameter = emailConfirmed.HasValue ?
                new ObjectParameter("EmailConfirmed", emailConfirmed) :
                new ObjectParameter("EmailConfirmed", typeof(bool));
    
            var passwordHashParameter = passwordHash != null ?
                new ObjectParameter("PasswordHash", passwordHash) :
                new ObjectParameter("PasswordHash", typeof(string));
    
            var customPasswordHashParameter = customPasswordHash != null ?
                new ObjectParameter("CustomPasswordHash", customPasswordHash) :
                new ObjectParameter("CustomPasswordHash", typeof(string));
    
            var securityStampParameter = securityStamp != null ?
                new ObjectParameter("SecurityStamp", securityStamp) :
                new ObjectParameter("SecurityStamp", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var phoneNumberConfirmedParameter = phoneNumberConfirmed.HasValue ?
                new ObjectParameter("PhoneNumberConfirmed", phoneNumberConfirmed) :
                new ObjectParameter("PhoneNumberConfirmed", typeof(bool));
    
            var twoFactorEnabledParameter = twoFactorEnabled.HasValue ?
                new ObjectParameter("TwoFactorEnabled", twoFactorEnabled) :
                new ObjectParameter("TwoFactorEnabled", typeof(bool));
    
            var lockoutEndDateUtcParameter = lockoutEndDateUtc.HasValue ?
                new ObjectParameter("LockoutEndDateUtc", lockoutEndDateUtc) :
                new ObjectParameter("LockoutEndDateUtc", typeof(System.DateTime));
    
            var lockoutEnabledParameter = lockoutEnabled.HasValue ?
                new ObjectParameter("LockoutEnabled", lockoutEnabled) :
                new ObjectParameter("LockoutEnabled", typeof(bool));
    
            var accessFailedCountParameter = accessFailedCount.HasValue ?
                new ObjectParameter("AccessFailedCount", accessFailedCount) :
                new ObjectParameter("AccessFailedCount", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var tipoDocumentoParameter = tipoDocumento.HasValue ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(int));
    
            var numeroDocumentoParameter = numeroDocumento != null ?
                new ObjectParameter("NumeroDocumento", numeroDocumento) :
                new ObjectParameter("NumeroDocumento", typeof(string));
    
            var colegioParameter = colegio.HasValue ?
                new ObjectParameter("Colegio", colegio) :
                new ObjectParameter("Colegio", typeof(int));
    
            var discriminatorParameter = discriminator != null ?
                new ObjectParameter("Discriminator", discriminator) :
                new ObjectParameter("Discriminator", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_UsersInsert", idParameter, emailParameter, emailConfirmedParameter, passwordHashParameter, customPasswordHashParameter, securityStampParameter, phoneNumberParameter, phoneNumberConfirmedParameter, twoFactorEnabledParameter, lockoutEndDateUtcParameter, lockoutEnabledParameter, accessFailedCountParameter, userNameParameter, apellidoPaternoParameter, apellidoMaternoParameter, nombreParameter, tipoDocumentoParameter, numeroDocumentoParameter, colegioParameter, discriminatorParameter);
        }
    
        public virtual ObjectResult<USP_VALIDAR_SEGURO_ALUMNO_Result> USP_VALIDAR_SEGURO_ALUMNO(Nullable<int> tipoDocumento, string numero, Nullable<int> campaña)
        {
            var tipoDocumentoParameter = tipoDocumento.HasValue ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(int));
    
            var numeroParameter = numero != null ?
                new ObjectParameter("numero", numero) :
                new ObjectParameter("numero", typeof(string));
    
            var campañaParameter = campaña.HasValue ?
                new ObjectParameter("Campaña", campaña) :
                new ObjectParameter("Campaña", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_VALIDAR_SEGURO_ALUMNO_Result>("USP_VALIDAR_SEGURO_ALUMNO", tipoDocumentoParameter, numeroParameter, campañaParameter);
        }
    
        public virtual ObjectResult<string> USP_VALIDASOC(Nullable<int> iEID, Nullable<System.DateTime> fVI, Nullable<System.DateTime> fVF, Nullable<System.DateTime> fVPI, Nullable<System.DateTime> fVPF, Nullable<int> cIAID, Nullable<int> productoID)
        {
            var iEIDParameter = iEID.HasValue ?
                new ObjectParameter("IEID", iEID) :
                new ObjectParameter("IEID", typeof(int));
    
            var fVIParameter = fVI.HasValue ?
                new ObjectParameter("FVI", fVI) :
                new ObjectParameter("FVI", typeof(System.DateTime));
    
            var fVFParameter = fVF.HasValue ?
                new ObjectParameter("FVF", fVF) :
                new ObjectParameter("FVF", typeof(System.DateTime));
    
            var fVPIParameter = fVPI.HasValue ?
                new ObjectParameter("FVPI", fVPI) :
                new ObjectParameter("FVPI", typeof(System.DateTime));
    
            var fVPFParameter = fVPF.HasValue ?
                new ObjectParameter("FVPF", fVPF) :
                new ObjectParameter("FVPF", typeof(System.DateTime));
    
            var cIAIDParameter = cIAID.HasValue ?
                new ObjectParameter("CIAID", cIAID) :
                new ObjectParameter("CIAID", typeof(int));
    
            var productoIDParameter = productoID.HasValue ?
                new ObjectParameter("ProductoID", productoID) :
                new ObjectParameter("ProductoID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("USP_VALIDASOC", iEIDParameter, fVIParameter, fVFParameter, fVPIParameter, fVPFParameter, cIAIDParameter, productoIDParameter);
        }
    
        public virtual int USP_InstitucionEducativaUpdate1(Nullable<int> iD, Nullable<int> tipoInstitucionEducativaID, Nullable<int> tipoDocumentoID, string codigo, string nombre, string razonSocial, Nullable<int> tipoEmpresa, string numeroDocumento, string codigoUbigeo, string direccion, string telefono, string fax, string apellidoPaternno, string apellidoMaterno, string nombreNatural, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioActualizacion, Nullable<System.DateTime> fechaActualizacion, Nullable<bool> activo)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var tipoInstitucionEducativaIDParameter = tipoInstitucionEducativaID.HasValue ?
                new ObjectParameter("TipoInstitucionEducativaID", tipoInstitucionEducativaID) :
                new ObjectParameter("TipoInstitucionEducativaID", typeof(int));
    
            var tipoDocumentoIDParameter = tipoDocumentoID.HasValue ?
                new ObjectParameter("TipoDocumentoID", tipoDocumentoID) :
                new ObjectParameter("TipoDocumentoID", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var razonSocialParameter = razonSocial != null ?
                new ObjectParameter("RazonSocial", razonSocial) :
                new ObjectParameter("RazonSocial", typeof(string));
    
            var tipoEmpresaParameter = tipoEmpresa.HasValue ?
                new ObjectParameter("TipoEmpresa", tipoEmpresa) :
                new ObjectParameter("TipoEmpresa", typeof(int));
    
            var numeroDocumentoParameter = numeroDocumento != null ?
                new ObjectParameter("NumeroDocumento", numeroDocumento) :
                new ObjectParameter("NumeroDocumento", typeof(string));
    
            var codigoUbigeoParameter = codigoUbigeo != null ?
                new ObjectParameter("CodigoUbigeo", codigoUbigeo) :
                new ObjectParameter("CodigoUbigeo", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var apellidoPaternnoParameter = apellidoPaternno != null ?
                new ObjectParameter("ApellidoPaternno", apellidoPaternno) :
                new ObjectParameter("ApellidoPaternno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var nombreNaturalParameter = nombreNatural != null ?
                new ObjectParameter("NombreNatural", nombreNatural) :
                new ObjectParameter("NombreNatural", typeof(string));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioActualizacionParameter = usuarioActualizacion != null ?
                new ObjectParameter("UsuarioActualizacion", usuarioActualizacion) :
                new ObjectParameter("UsuarioActualizacion", typeof(string));
    
            var fechaActualizacionParameter = fechaActualizacion.HasValue ?
                new ObjectParameter("FechaActualizacion", fechaActualizacion) :
                new ObjectParameter("FechaActualizacion", typeof(System.DateTime));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_InstitucionEducativaUpdate1", iDParameter, tipoInstitucionEducativaIDParameter, tipoDocumentoIDParameter, codigoParameter, nombreParameter, razonSocialParameter, tipoEmpresaParameter, numeroDocumentoParameter, codigoUbigeoParameter, direccionParameter, telefonoParameter, faxParameter, apellidoPaternnoParameter, apellidoMaternoParameter, nombreNaturalParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioActualizacionParameter, fechaActualizacionParameter, activoParameter);
        }
    
        public virtual int Usp_Del_Asociacion(Nullable<int> idAsociacion)
        {
            var idAsociacionParameter = idAsociacion.HasValue ?
                new ObjectParameter("IdAsociacion", idAsociacion) :
                new ObjectParameter("IdAsociacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_Del_Asociacion", idAsociacionParameter);
        }
    
        public virtual ObjectResult<Usp_Del_RollbackCodigoDetalle_Result> Usp_Del_RollbackCodigoDetalle(Nullable<int> cargaHistorialID)
        {
            var cargaHistorialIDParameter = cargaHistorialID.HasValue ?
                new ObjectParameter("CargaHistorialID", cargaHistorialID) :
                new ObjectParameter("CargaHistorialID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_Del_RollbackCodigoDetalle_Result>("Usp_Del_RollbackCodigoDetalle", cargaHistorialIDParameter);
        }
    
        public virtual int Usp_Sel_CodigoDetalle(Nullable<bool> filtrarFechaVigencia)
        {
            var filtrarFechaVigenciaParameter = filtrarFechaVigencia.HasValue ?
                new ObjectParameter("FiltrarFechaVigencia", filtrarFechaVigencia) :
                new ObjectParameter("FiltrarFechaVigencia", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_Sel_CodigoDetalle", filtrarFechaVigenciaParameter);
        }
    
        public virtual ObjectResult<Usp_Sel_CodigoDetalle_By_Afiliado_Result> Usp_Sel_CodigoDetalle_By_Afiliado(Nullable<int> idAsociacion, string textoBusqueda)
        {
            var idAsociacionParameter = idAsociacion.HasValue ?
                new ObjectParameter("IdAsociacion", idAsociacion) :
                new ObjectParameter("IdAsociacion", typeof(int));
    
            var textoBusquedaParameter = textoBusqueda != null ?
                new ObjectParameter("textoBusqueda", textoBusqueda) :
                new ObjectParameter("textoBusqueda", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_Sel_CodigoDetalle_By_Afiliado_Result>("Usp_Sel_CodigoDetalle_By_Afiliado", idAsociacionParameter, textoBusquedaParameter);
        }
    
        public virtual ObjectResult<Usp_Sel_CodigoDetalle_By_Pagos_Result> Usp_Sel_CodigoDetalle_By_Pagos(Nullable<int> institucionEducativaId, Nullable<int> productoId, Nullable<int> cIASeguroID, Nullable<bool> isPagado, Nullable<int> bancoID, Nullable<int> monedaID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string textoBusqueda, Nullable<bool> filtrarFechaVigencia)
        {
            var institucionEducativaIdParameter = institucionEducativaId.HasValue ?
                new ObjectParameter("InstitucionEducativaId", institucionEducativaId) :
                new ObjectParameter("InstitucionEducativaId", typeof(int));
    
            var productoIdParameter = productoId.HasValue ?
                new ObjectParameter("ProductoId", productoId) :
                new ObjectParameter("ProductoId", typeof(int));
    
            var cIASeguroIDParameter = cIASeguroID.HasValue ?
                new ObjectParameter("CIASeguroID", cIASeguroID) :
                new ObjectParameter("CIASeguroID", typeof(int));
    
            var isPagadoParameter = isPagado.HasValue ?
                new ObjectParameter("IsPagado", isPagado) :
                new ObjectParameter("IsPagado", typeof(bool));
    
            var bancoIDParameter = bancoID.HasValue ?
                new ObjectParameter("BancoID", bancoID) :
                new ObjectParameter("BancoID", typeof(int));
    
            var monedaIDParameter = monedaID.HasValue ?
                new ObjectParameter("MonedaID", monedaID) :
                new ObjectParameter("MonedaID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var textoBusquedaParameter = textoBusqueda != null ?
                new ObjectParameter("TextoBusqueda", textoBusqueda) :
                new ObjectParameter("TextoBusqueda", typeof(string));
    
            var filtrarFechaVigenciaParameter = filtrarFechaVigencia.HasValue ?
                new ObjectParameter("FiltrarFechaVigencia", filtrarFechaVigencia) :
                new ObjectParameter("FiltrarFechaVigencia", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_Sel_CodigoDetalle_By_Pagos_Result>("Usp_Sel_CodigoDetalle_By_Pagos", institucionEducativaIdParameter, productoIdParameter, cIASeguroIDParameter, isPagadoParameter, bancoIDParameter, monedaIDParameter, startDateParameter, endDateParameter, textoBusquedaParameter, filtrarFechaVigenciaParameter);
        }
    
        public virtual ObjectResult<Usp_Sel_CodigoDetalleByInstitucionEducativa_Result> Usp_Sel_CodigoDetalleByInstitucionEducativa(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_Sel_CodigoDetalleByInstitucionEducativa_Result>("Usp_Sel_CodigoDetalleByInstitucionEducativa", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<Usp_Sel_MaxTotales_CIASeguro_Result> Usp_Sel_MaxTotales_CIASeguro(Nullable<int> campaniaID, Nullable<decimal> tipoCambio)
        {
            var campaniaIDParameter = campaniaID.HasValue ?
                new ObjectParameter("CampaniaID", campaniaID) :
                new ObjectParameter("CampaniaID", typeof(int));
    
            var tipoCambioParameter = tipoCambio.HasValue ?
                new ObjectParameter("TipoCambio", tipoCambio) :
                new ObjectParameter("TipoCambio", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_Sel_MaxTotales_CIASeguro_Result>("Usp_Sel_MaxTotales_CIASeguro", campaniaIDParameter, tipoCambioParameter);
        }
    
        public virtual ObjectResult<Usp_Sel_MaxTotales_InstitucionEducativa_Result> Usp_Sel_MaxTotales_InstitucionEducativa(Nullable<int> campaniaID, Nullable<decimal> tipoCambio)
        {
            var campaniaIDParameter = campaniaID.HasValue ?
                new ObjectParameter("CampaniaID", campaniaID) :
                new ObjectParameter("CampaniaID", typeof(int));
    
            var tipoCambioParameter = tipoCambio.HasValue ?
                new ObjectParameter("TipoCambio", tipoCambio) :
                new ObjectParameter("TipoCambio", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_Sel_MaxTotales_InstitucionEducativa_Result>("Usp_Sel_MaxTotales_InstitucionEducativa", campaniaIDParameter, tipoCambioParameter);
        }
    
        public virtual ObjectResult<Usp_Sel_MaxTotales_Producto_Result> Usp_Sel_MaxTotales_Producto(Nullable<int> campaniaID, Nullable<decimal> tipoCambio)
        {
            var campaniaIDParameter = campaniaID.HasValue ?
                new ObjectParameter("CampaniaID", campaniaID) :
                new ObjectParameter("CampaniaID", typeof(int));
    
            var tipoCambioParameter = tipoCambio.HasValue ?
                new ObjectParameter("TipoCambio", tipoCambio) :
                new ObjectParameter("TipoCambio", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_Sel_MaxTotales_Producto_Result>("Usp_Sel_MaxTotales_Producto", campaniaIDParameter, tipoCambioParameter);
        }
    
        public virtual ObjectResult<Usp_Sel_Reporte_Cobranza_Result> Usp_Sel_Reporte_Cobranza(Nullable<int> tipoReporte, Nullable<int> campaniaID, Nullable<int> cIASeguroID, Nullable<System.DateTime> fechaInicioCIASeguro, Nullable<System.DateTime> fechaFinCIASeguro, Nullable<int> institucionEducativaID, Nullable<System.DateTime> fechaInicioInstitucionEducativa, Nullable<System.DateTime> fechaFinInstitucionEducativa, Nullable<int> productoID, Nullable<System.DateTime> fechaInicioProducto, Nullable<System.DateTime> fechaFinProducto)
        {
            var tipoReporteParameter = tipoReporte.HasValue ?
                new ObjectParameter("TipoReporte", tipoReporte) :
                new ObjectParameter("TipoReporte", typeof(int));
    
            var campaniaIDParameter = campaniaID.HasValue ?
                new ObjectParameter("CampaniaID", campaniaID) :
                new ObjectParameter("CampaniaID", typeof(int));
    
            var cIASeguroIDParameter = cIASeguroID.HasValue ?
                new ObjectParameter("CIASeguroID", cIASeguroID) :
                new ObjectParameter("CIASeguroID", typeof(int));
    
            var fechaInicioCIASeguroParameter = fechaInicioCIASeguro.HasValue ?
                new ObjectParameter("FechaInicioCIASeguro", fechaInicioCIASeguro) :
                new ObjectParameter("FechaInicioCIASeguro", typeof(System.DateTime));
    
            var fechaFinCIASeguroParameter = fechaFinCIASeguro.HasValue ?
                new ObjectParameter("FechaFinCIASeguro", fechaFinCIASeguro) :
                new ObjectParameter("FechaFinCIASeguro", typeof(System.DateTime));
    
            var institucionEducativaIDParameter = institucionEducativaID.HasValue ?
                new ObjectParameter("InstitucionEducativaID", institucionEducativaID) :
                new ObjectParameter("InstitucionEducativaID", typeof(int));
    
            var fechaInicioInstitucionEducativaParameter = fechaInicioInstitucionEducativa.HasValue ?
                new ObjectParameter("FechaInicioInstitucionEducativa", fechaInicioInstitucionEducativa) :
                new ObjectParameter("FechaInicioInstitucionEducativa", typeof(System.DateTime));
    
            var fechaFinInstitucionEducativaParameter = fechaFinInstitucionEducativa.HasValue ?
                new ObjectParameter("FechaFinInstitucionEducativa", fechaFinInstitucionEducativa) :
                new ObjectParameter("FechaFinInstitucionEducativa", typeof(System.DateTime));
    
            var productoIDParameter = productoID.HasValue ?
                new ObjectParameter("ProductoID", productoID) :
                new ObjectParameter("ProductoID", typeof(int));
    
            var fechaInicioProductoParameter = fechaInicioProducto.HasValue ?
                new ObjectParameter("FechaInicioProducto", fechaInicioProducto) :
                new ObjectParameter("FechaInicioProducto", typeof(System.DateTime));
    
            var fechaFinProductoParameter = fechaFinProducto.HasValue ?
                new ObjectParameter("FechaFinProducto", fechaFinProducto) :
                new ObjectParameter("FechaFinProducto", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_Sel_Reporte_Cobranza_Result>("Usp_Sel_Reporte_Cobranza", tipoReporteParameter, campaniaIDParameter, cIASeguroIDParameter, fechaInicioCIASeguroParameter, fechaFinCIASeguroParameter, institucionEducativaIDParameter, fechaInicioInstitucionEducativaParameter, fechaFinInstitucionEducativaParameter, productoIDParameter, fechaInicioProductoParameter, fechaFinProductoParameter);
        }
    
        public virtual ObjectResult<string> Usp_Sel_Reporte_Cobranza_ProductoAccidentes(Nullable<int> tipoReporte, Nullable<int> campaniaID, Nullable<int> cIASeguroID, Nullable<System.DateTime> fechaInicioCIASeguro, Nullable<System.DateTime> fechaFinCIASeguro, Nullable<int> institucionEducativaID, Nullable<System.DateTime> fechaInicioInstitucionEducativa, Nullable<System.DateTime> fechaFinInstitucionEducativa, Nullable<int> productoID, Nullable<System.DateTime> fechaInicioProducto, Nullable<System.DateTime> fechaFinProducto)
        {
            var tipoReporteParameter = tipoReporte.HasValue ?
                new ObjectParameter("TipoReporte", tipoReporte) :
                new ObjectParameter("TipoReporte", typeof(int));
    
            var campaniaIDParameter = campaniaID.HasValue ?
                new ObjectParameter("CampaniaID", campaniaID) :
                new ObjectParameter("CampaniaID", typeof(int));
    
            var cIASeguroIDParameter = cIASeguroID.HasValue ?
                new ObjectParameter("CIASeguroID", cIASeguroID) :
                new ObjectParameter("CIASeguroID", typeof(int));
    
            var fechaInicioCIASeguroParameter = fechaInicioCIASeguro.HasValue ?
                new ObjectParameter("FechaInicioCIASeguro", fechaInicioCIASeguro) :
                new ObjectParameter("FechaInicioCIASeguro", typeof(System.DateTime));
    
            var fechaFinCIASeguroParameter = fechaFinCIASeguro.HasValue ?
                new ObjectParameter("FechaFinCIASeguro", fechaFinCIASeguro) :
                new ObjectParameter("FechaFinCIASeguro", typeof(System.DateTime));
    
            var institucionEducativaIDParameter = institucionEducativaID.HasValue ?
                new ObjectParameter("InstitucionEducativaID", institucionEducativaID) :
                new ObjectParameter("InstitucionEducativaID", typeof(int));
    
            var fechaInicioInstitucionEducativaParameter = fechaInicioInstitucionEducativa.HasValue ?
                new ObjectParameter("FechaInicioInstitucionEducativa", fechaInicioInstitucionEducativa) :
                new ObjectParameter("FechaInicioInstitucionEducativa", typeof(System.DateTime));
    
            var fechaFinInstitucionEducativaParameter = fechaFinInstitucionEducativa.HasValue ?
                new ObjectParameter("FechaFinInstitucionEducativa", fechaFinInstitucionEducativa) :
                new ObjectParameter("FechaFinInstitucionEducativa", typeof(System.DateTime));
    
            var productoIDParameter = productoID.HasValue ?
                new ObjectParameter("ProductoID", productoID) :
                new ObjectParameter("ProductoID", typeof(int));
    
            var fechaInicioProductoParameter = fechaInicioProducto.HasValue ?
                new ObjectParameter("FechaInicioProducto", fechaInicioProducto) :
                new ObjectParameter("FechaInicioProducto", typeof(System.DateTime));
    
            var fechaFinProductoParameter = fechaFinProducto.HasValue ?
                new ObjectParameter("FechaFinProducto", fechaFinProducto) :
                new ObjectParameter("FechaFinProducto", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Usp_Sel_Reporte_Cobranza_ProductoAccidentes", tipoReporteParameter, campaniaIDParameter, cIASeguroIDParameter, fechaInicioCIASeguroParameter, fechaFinCIASeguroParameter, institucionEducativaIDParameter, fechaInicioInstitucionEducativaParameter, fechaFinInstitucionEducativaParameter, productoIDParameter, fechaInicioProductoParameter, fechaFinProductoParameter);
        }
    
        public virtual ObjectResult<Usp_Sel_Reporte_Cobranza_ProductoAccidentesData_Result> Usp_Sel_Reporte_Cobranza_ProductoAccidentesData(Nullable<int> tipoReporte, Nullable<int> campaniaID, Nullable<int> cIASeguroID, Nullable<System.DateTime> fechaInicioCIASeguro, Nullable<System.DateTime> fechaFinCIASeguro, Nullable<int> institucionEducativaID, Nullable<System.DateTime> fechaInicioInstitucionEducativa, Nullable<System.DateTime> fechaFinInstitucionEducativa, Nullable<int> productoID, Nullable<System.DateTime> fechaInicioProducto, Nullable<System.DateTime> fechaFinProducto)
        {
            var tipoReporteParameter = tipoReporte.HasValue ?
                new ObjectParameter("TipoReporte", tipoReporte) :
                new ObjectParameter("TipoReporte", typeof(int));
    
            var campaniaIDParameter = campaniaID.HasValue ?
                new ObjectParameter("CampaniaID", campaniaID) :
                new ObjectParameter("CampaniaID", typeof(int));
    
            var cIASeguroIDParameter = cIASeguroID.HasValue ?
                new ObjectParameter("CIASeguroID", cIASeguroID) :
                new ObjectParameter("CIASeguroID", typeof(int));
    
            var fechaInicioCIASeguroParameter = fechaInicioCIASeguro.HasValue ?
                new ObjectParameter("FechaInicioCIASeguro", fechaInicioCIASeguro) :
                new ObjectParameter("FechaInicioCIASeguro", typeof(System.DateTime));
    
            var fechaFinCIASeguroParameter = fechaFinCIASeguro.HasValue ?
                new ObjectParameter("FechaFinCIASeguro", fechaFinCIASeguro) :
                new ObjectParameter("FechaFinCIASeguro", typeof(System.DateTime));
    
            var institucionEducativaIDParameter = institucionEducativaID.HasValue ?
                new ObjectParameter("InstitucionEducativaID", institucionEducativaID) :
                new ObjectParameter("InstitucionEducativaID", typeof(int));
    
            var fechaInicioInstitucionEducativaParameter = fechaInicioInstitucionEducativa.HasValue ?
                new ObjectParameter("FechaInicioInstitucionEducativa", fechaInicioInstitucionEducativa) :
                new ObjectParameter("FechaInicioInstitucionEducativa", typeof(System.DateTime));
    
            var fechaFinInstitucionEducativaParameter = fechaFinInstitucionEducativa.HasValue ?
                new ObjectParameter("FechaFinInstitucionEducativa", fechaFinInstitucionEducativa) :
                new ObjectParameter("FechaFinInstitucionEducativa", typeof(System.DateTime));
    
            var productoIDParameter = productoID.HasValue ?
                new ObjectParameter("ProductoID", productoID) :
                new ObjectParameter("ProductoID", typeof(int));
    
            var fechaInicioProductoParameter = fechaInicioProducto.HasValue ?
                new ObjectParameter("FechaInicioProducto", fechaInicioProducto) :
                new ObjectParameter("FechaInicioProducto", typeof(System.DateTime));
    
            var fechaFinProductoParameter = fechaFinProducto.HasValue ?
                new ObjectParameter("FechaFinProducto", fechaFinProducto) :
                new ObjectParameter("FechaFinProducto", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_Sel_Reporte_Cobranza_ProductoAccidentesData_Result>("Usp_Sel_Reporte_Cobranza_ProductoAccidentesData", tipoReporteParameter, campaniaIDParameter, cIASeguroIDParameter, fechaInicioCIASeguroParameter, fechaFinCIASeguroParameter, institucionEducativaIDParameter, fechaInicioInstitucionEducativaParameter, fechaFinInstitucionEducativaParameter, productoIDParameter, fechaInicioProductoParameter, fechaFinProductoParameter);
        }
    
        public virtual ObjectResult<string> Usp_Sel_Reporte_Cobranza_ProductoRenta(Nullable<int> tipoReporte, Nullable<int> campaniaID, Nullable<int> cIASeguroID, Nullable<System.DateTime> fechaInicioCIASeguro, Nullable<System.DateTime> fechaFinCIASeguro, Nullable<int> institucionEducativaID, Nullable<System.DateTime> fechaInicioInstitucionEducativa, Nullable<System.DateTime> fechaFinInstitucionEducativa, Nullable<int> productoID, Nullable<System.DateTime> fechaInicioProducto, Nullable<System.DateTime> fechaFinProducto)
        {
            var tipoReporteParameter = tipoReporte.HasValue ?
                new ObjectParameter("TipoReporte", tipoReporte) :
                new ObjectParameter("TipoReporte", typeof(int));
    
            var campaniaIDParameter = campaniaID.HasValue ?
                new ObjectParameter("CampaniaID", campaniaID) :
                new ObjectParameter("CampaniaID", typeof(int));
    
            var cIASeguroIDParameter = cIASeguroID.HasValue ?
                new ObjectParameter("CIASeguroID", cIASeguroID) :
                new ObjectParameter("CIASeguroID", typeof(int));
    
            var fechaInicioCIASeguroParameter = fechaInicioCIASeguro.HasValue ?
                new ObjectParameter("FechaInicioCIASeguro", fechaInicioCIASeguro) :
                new ObjectParameter("FechaInicioCIASeguro", typeof(System.DateTime));
    
            var fechaFinCIASeguroParameter = fechaFinCIASeguro.HasValue ?
                new ObjectParameter("FechaFinCIASeguro", fechaFinCIASeguro) :
                new ObjectParameter("FechaFinCIASeguro", typeof(System.DateTime));
    
            var institucionEducativaIDParameter = institucionEducativaID.HasValue ?
                new ObjectParameter("InstitucionEducativaID", institucionEducativaID) :
                new ObjectParameter("InstitucionEducativaID", typeof(int));
    
            var fechaInicioInstitucionEducativaParameter = fechaInicioInstitucionEducativa.HasValue ?
                new ObjectParameter("FechaInicioInstitucionEducativa", fechaInicioInstitucionEducativa) :
                new ObjectParameter("FechaInicioInstitucionEducativa", typeof(System.DateTime));
    
            var fechaFinInstitucionEducativaParameter = fechaFinInstitucionEducativa.HasValue ?
                new ObjectParameter("FechaFinInstitucionEducativa", fechaFinInstitucionEducativa) :
                new ObjectParameter("FechaFinInstitucionEducativa", typeof(System.DateTime));
    
            var productoIDParameter = productoID.HasValue ?
                new ObjectParameter("ProductoID", productoID) :
                new ObjectParameter("ProductoID", typeof(int));
    
            var fechaInicioProductoParameter = fechaInicioProducto.HasValue ?
                new ObjectParameter("FechaInicioProducto", fechaInicioProducto) :
                new ObjectParameter("FechaInicioProducto", typeof(System.DateTime));
    
            var fechaFinProductoParameter = fechaFinProducto.HasValue ?
                new ObjectParameter("FechaFinProducto", fechaFinProducto) :
                new ObjectParameter("FechaFinProducto", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Usp_Sel_Reporte_Cobranza_ProductoRenta", tipoReporteParameter, campaniaIDParameter, cIASeguroIDParameter, fechaInicioCIASeguroParameter, fechaFinCIASeguroParameter, institucionEducativaIDParameter, fechaInicioInstitucionEducativaParameter, fechaFinInstitucionEducativaParameter, productoIDParameter, fechaInicioProductoParameter, fechaFinProductoParameter);
        }
    
        public virtual ObjectResult<Usp_Sel_Reporte_Cobranza_ProductoRentaData_Result> Usp_Sel_Reporte_Cobranza_ProductoRentaData(Nullable<int> tipoReporte, Nullable<int> campaniaID, Nullable<int> cIASeguroID, Nullable<System.DateTime> fechaInicioCIASeguro, Nullable<System.DateTime> fechaFinCIASeguro, Nullable<int> institucionEducativaID, Nullable<System.DateTime> fechaInicioInstitucionEducativa, Nullable<System.DateTime> fechaFinInstitucionEducativa, Nullable<int> productoID, Nullable<System.DateTime> fechaInicioProducto, Nullable<System.DateTime> fechaFinProducto)
        {
            var tipoReporteParameter = tipoReporte.HasValue ?
                new ObjectParameter("TipoReporte", tipoReporte) :
                new ObjectParameter("TipoReporte", typeof(int));
    
            var campaniaIDParameter = campaniaID.HasValue ?
                new ObjectParameter("CampaniaID", campaniaID) :
                new ObjectParameter("CampaniaID", typeof(int));
    
            var cIASeguroIDParameter = cIASeguroID.HasValue ?
                new ObjectParameter("CIASeguroID", cIASeguroID) :
                new ObjectParameter("CIASeguroID", typeof(int));
    
            var fechaInicioCIASeguroParameter = fechaInicioCIASeguro.HasValue ?
                new ObjectParameter("FechaInicioCIASeguro", fechaInicioCIASeguro) :
                new ObjectParameter("FechaInicioCIASeguro", typeof(System.DateTime));
    
            var fechaFinCIASeguroParameter = fechaFinCIASeguro.HasValue ?
                new ObjectParameter("FechaFinCIASeguro", fechaFinCIASeguro) :
                new ObjectParameter("FechaFinCIASeguro", typeof(System.DateTime));
    
            var institucionEducativaIDParameter = institucionEducativaID.HasValue ?
                new ObjectParameter("InstitucionEducativaID", institucionEducativaID) :
                new ObjectParameter("InstitucionEducativaID", typeof(int));
    
            var fechaInicioInstitucionEducativaParameter = fechaInicioInstitucionEducativa.HasValue ?
                new ObjectParameter("FechaInicioInstitucionEducativa", fechaInicioInstitucionEducativa) :
                new ObjectParameter("FechaInicioInstitucionEducativa", typeof(System.DateTime));
    
            var fechaFinInstitucionEducativaParameter = fechaFinInstitucionEducativa.HasValue ?
                new ObjectParameter("FechaFinInstitucionEducativa", fechaFinInstitucionEducativa) :
                new ObjectParameter("FechaFinInstitucionEducativa", typeof(System.DateTime));
    
            var productoIDParameter = productoID.HasValue ?
                new ObjectParameter("ProductoID", productoID) :
                new ObjectParameter("ProductoID", typeof(int));
    
            var fechaInicioProductoParameter = fechaInicioProducto.HasValue ?
                new ObjectParameter("FechaInicioProducto", fechaInicioProducto) :
                new ObjectParameter("FechaInicioProducto", typeof(System.DateTime));
    
            var fechaFinProductoParameter = fechaFinProducto.HasValue ?
                new ObjectParameter("FechaFinProducto", fechaFinProducto) :
                new ObjectParameter("FechaFinProducto", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_Sel_Reporte_Cobranza_ProductoRentaData_Result>("Usp_Sel_Reporte_Cobranza_ProductoRentaData", tipoReporteParameter, campaniaIDParameter, cIASeguroIDParameter, fechaInicioCIASeguroParameter, fechaFinCIASeguroParameter, institucionEducativaIDParameter, fechaInicioInstitucionEducativaParameter, fechaFinInstitucionEducativaParameter, productoIDParameter, fechaInicioProductoParameter, fechaFinProductoParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Usp_Sel_ValidarCierreInstitucion(Nullable<int> campaniaID, Nullable<int> asociacionID, Nullable<int> institucionEducativaID, Nullable<int> productoID)
        {
            var campaniaIDParameter = campaniaID.HasValue ?
                new ObjectParameter("CampaniaID", campaniaID) :
                new ObjectParameter("CampaniaID", typeof(int));
    
            var asociacionIDParameter = asociacionID.HasValue ?
                new ObjectParameter("AsociacionID", asociacionID) :
                new ObjectParameter("AsociacionID", typeof(int));
    
            var institucionEducativaIDParameter = institucionEducativaID.HasValue ?
                new ObjectParameter("InstitucionEducativaID", institucionEducativaID) :
                new ObjectParameter("InstitucionEducativaID", typeof(int));
    
            var productoIDParameter = productoID.HasValue ?
                new ObjectParameter("ProductoID", productoID) :
                new ObjectParameter("ProductoID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Usp_Sel_ValidarCierreInstitucion", campaniaIDParameter, asociacionIDParameter, institucionEducativaIDParameter, productoIDParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Usp_Sel_ValidarMontoCheque(Nullable<int> campaniaID, Nullable<int> institucionEducativaID, Nullable<int> cIASeguroID, Nullable<int> productoID, Nullable<int> monedaID, Nullable<int> chequeID, Nullable<decimal> montoCheque)
        {
            var campaniaIDParameter = campaniaID.HasValue ?
                new ObjectParameter("CampaniaID", campaniaID) :
                new ObjectParameter("CampaniaID", typeof(int));
    
            var institucionEducativaIDParameter = institucionEducativaID.HasValue ?
                new ObjectParameter("InstitucionEducativaID", institucionEducativaID) :
                new ObjectParameter("InstitucionEducativaID", typeof(int));
    
            var cIASeguroIDParameter = cIASeguroID.HasValue ?
                new ObjectParameter("CIASeguroID", cIASeguroID) :
                new ObjectParameter("CIASeguroID", typeof(int));
    
            var productoIDParameter = productoID.HasValue ?
                new ObjectParameter("ProductoID", productoID) :
                new ObjectParameter("ProductoID", typeof(int));
    
            var monedaIDParameter = monedaID.HasValue ?
                new ObjectParameter("MonedaID", monedaID) :
                new ObjectParameter("MonedaID", typeof(int));
    
            var chequeIDParameter = chequeID.HasValue ?
                new ObjectParameter("ChequeID", chequeID) :
                new ObjectParameter("ChequeID", typeof(int));
    
            var montoChequeParameter = montoCheque.HasValue ?
                new ObjectParameter("MontoCheque", montoCheque) :
                new ObjectParameter("MontoCheque", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Usp_Sel_ValidarMontoCheque", campaniaIDParameter, institucionEducativaIDParameter, cIASeguroIDParameter, productoIDParameter, monedaIDParameter, chequeIDParameter, montoChequeParameter);
        }
    
        public virtual ObjectResult<USP_LISTARASOCIACIONES2_Result> USP_LISTARASOCIACIONES2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LISTARASOCIACIONES2_Result>("USP_LISTARASOCIACIONES2");
        }
    
        public virtual ObjectResult<USP_LISTARASOCIACIONES_NOMBRE_Result> USP_LISTARASOCIACIONES_NOMBRE(string nOMBRE)
        {
            var nOMBREParameter = nOMBRE != null ?
                new ObjectParameter("NOMBRE", nOMBRE) :
                new ObjectParameter("NOMBRE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LISTARASOCIACIONES_NOMBRE_Result>("USP_LISTARASOCIACIONES_NOMBRE", nOMBREParameter);
        }
    }
}
